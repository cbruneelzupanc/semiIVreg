[{"path":"https://cbruneelzupanc.github.io/semiIVreg/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 semiIVreg authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://cbruneelzupanc.github.io/semiIVreg/articles/semiIVreg.html","id":"overview","dir":"Articles","previous_headings":"","what":"Overview","title":"semiIVreg: A package for semi-IV regressions in R","text":"package provides estimation procedure semi-IVs, Bruneel-Zupanc (2024). particular, main function semiivreg() estimates marginal treatment effect (MTE) marginal treatment response (MTR).","code":""},{"path":"https://cbruneelzupanc.github.io/semiIVreg/articles/semiIVreg.html","id":"installation","dir":"Articles","previous_headings":"","what":"Installation","title":"semiIVreg: A package for semi-IV regressions in R","text":"development version semiIVreg hosted GitHub . can conveniently installed via install_github() function remotes package.","code":"remotes::install_github(\"cbruneelzupanc/semiIVreg\")"},{"path":[]},{"path":"https://cbruneelzupanc.github.io/semiIVreg/articles/semiIVreg.html","id":"the-model","dir":"Articles","previous_headings":"semi-instrumental variable (semi-IV) regression","what":"The model","title":"semiIVreg: A package for semi-IV regressions in R","text":"semiivreg estimates marginal treatment effect (MTE) marginal treatment response (MTR) following model. potential outcomes given Y0=δ0+W0β0+Xβ0X+U0,(1) Y_0 = \\delta_{0} + W_0 \\beta_0 + X \\beta^X_{0} + U_0, \\quad \\quad \\quad (1) Y1=δ1+W1β1+Xβ1X+U1,(2) Y_1 = \\delta_{1} + W_1 \\beta_1 + X \\beta^X_{1} + U_1, \\quad \\quad \\quad (2) selection rule D*=g(W0,W1,X)−V=−(α+α0W0+α1W1+αXX)−V,(3) D=𝕀(D*>0), \\begin{aligned} D^* &= g(W_0, W_1, X) - V \\\\ &= - (\\alpha + \\alpha_0 W_0 + \\alpha_1 W_1 + \\alpha_{X} X ) - V, \\quad \\quad \\quad (3) \\\\ \\text{ } \\quad D &= \\mathbb{}(D^* > 0), \\end{aligned} semi-IVs: W0W_0 (respectively W1W_1) semi-IVs excluded Y1Y_1 (resp. Y0Y_0). W0W_0 W1W_1 may contain several variables. Nonparametric identification requires WdW_d contains least one excluded variable (see Bruneel-Zupanc (2024)). Covariates: XX covariates affect potential outcomes. One can restrict effect XX across potential outcomes (.e., β0X=β1X\\beta^X_{0} = \\beta^X_{1}). , specify: general, different effect covariates across alternatives (.e., β0X≠β1X\\beta^X_{0} \\neq \\beta^X_{1}). specified including covariates semi-IVs: semiivreg(y~d|w0+x|w1+x, data). Unobservables: U0U_0 U1U_1 general unobservables (may include several shocks, may across alternatives) affecting outcomes. VV scalar unobservable affects selection. lower VV, likely one select treatment. Nonparametric identification requires independence, .e., (U0,U1,V)⊥(W0,W1)|X(U_0, U_1, V) \\perp (W_0, W_1) | X. estimation , additionally assume additive separability covariates XX, .e., E(Ud|V,X)=E(Ud|V)E(U_d | V, X) = E(U_d | V) d=0,1d=0,1. assumption necessary identification, estimation. standard simplification helps estimation. See Carneiro, Heckman, Vytlacil (2011), Brinch, Mogstad, Wiswall (2017) Andresen (2018) comparable examples estimation MTE IVs.","code":"semiivreg(y~d|w0|w1|x, data)"},{"path":"https://cbruneelzupanc.github.io/semiIVreg/articles/semiIVreg.html","id":"estimation-procedure","dir":"Articles","previous_headings":"semi-instrumental variable (semi-IV) regression","what":"Estimation procedure","title":"semiIVreg: A package for semi-IV regressions in R","text":"estimation procedure closely follows counterpart estimation MTE standard IVs, see e.g., Andresen (2018). command estimates marginal treatment responses marginal treatment effects, .e., MTRd(u,wd,x)=E(Yd|X=x,Wd=wd,UD=u),MTE(u,x,w0,w1)=E(Y1−Y0|X=x,W0=w0,W1=w1,UD=u)=MTR1(u,w1,x)−MTR0(u,w0,x), \\begin{aligned} MTR_d(u, w_d, x) &= E(Y_d | X=x, W_d=w_d, U_D=u), \\\\ MTE(u, x, w_0, w_1) &= E(Y_1 - Y_0 | X = x, W_0=w_0, W_1=w_1, U_D=u) \\\\ &= MTR_1(u, w_1, x) - MTR_0(u, w_0, x), \\end{aligned} UD=FV(V)∼𝒰(0,1)U_D = F_V(V) \\sim \\mathcal{U}(0, 1) normalized unobserved resistance treatment. estimation proceeds two stages.","code":""},{"path":"https://cbruneelzupanc.github.io/semiIVreg/articles/semiIVreg.html","id":"first-stage-propensity-score","dir":"Articles","previous_headings":"semi-instrumental variable (semi-IV) regression > Estimation procedure","what":"1. First stage: propensity score","title":"semiIVreg: A package for semi-IV regressions in R","text":"Estimate propensity score P̂\\hat{P} treatment selection equation (3). default, function g(⋅)g(\\cdot) given simple linear specification , code allows specifying first stage. example: default, estimation assumes probit model first stage (.e., assumes VV normally distributed). However, can specify models (e.g., logit) using firststage_model argument. theory, specification first stage added, even possible estimate propensity score outside semiivreg command (feature implemented yet).","code":"semiivreg(y~d|w0+x|w1+x, data,             propensity_formula = d~w0+w1+w0:w1+w0:x+w1:x+I(w0^2)+I(w1^2))"},{"path":"https://cbruneelzupanc.github.io/semiIVreg/articles/semiIVreg.html","id":"second-stage-marginal-treatment-responses","dir":"Articles","previous_headings":"semi-instrumental variable (semi-IV) regression > Estimation procedure","what":"2. Second stage: marginal treatment responses","title":"semiIVreg: A package for semi-IV regressions in R","text":"Estimate control function κd(P)\\kappa_d(P) potential outcomes YdY_d given propensity score PP covariates XX. control function estimated flexible polynomial transformation propensity score. estimation done stacked regression potential outcomes specification (1)-(2): E[Y|W0,W1,X,P̂]=D×(δ1+W1β1+Xβ1X+κ1(P̂))+(1−D)×(δ0+W0β0+Xβ0X+κ0(P̂)). \\begin{aligned} E[Y|W_0, W_1, X, \\hat{P}] = &D \\times ( \\delta_{1} + W_1 \\beta_1 + X \\beta^X_{1} + \\kappa_1(\\hat{P}) ) + \\\\ &(1-D) \\times ( \\delta_{0} + W_0 \\beta_0 + X \\beta^X_{0} + \\kappa_0(\\hat{P})). \\end{aligned} control functions sample estimates (using estimate P̂\\hat{P}) theoretical counterparts: κ1(P)=E[U1|D=1,W1,W0,X,P]=E[U1|D=1,P]=E[U1|UD≤P]κ0(P)=E[U0|D=0,W1,W0,X,P]=E[U0|D=0,P]=E[U0|UD>P] \\begin{aligned} \\kappa_1(P) &= E[ U_1 | D=1, W_1, W_0, X,P] = E[U_1|D=1, P] = E[U_1 | U_D \\leq P] \\\\ \\kappa_0(P) &= E[ U_0 | D=0, W_1, W_0, X,P] = E[U_0|D=0, P] = E[U_0 | U_D > P] \\end{aligned} default, estimate flexible polynomials degree pol_degree_transform κ0(P)\\kappa_0(P) κ1(P)\\kappa_1(P). semi-IVs covariates, note W0W_0 W1W_1 can flexible transformations (polynomial, splines) specific variables, outcome equations quite flexible (also specify interactions WdW_d XX). second stage equation estimated, don’t need estimate parameters, just take proper derivatives estimated functional form. : k̂1(u)=E[U1|UD=u]=κ̂1(u)+uκ̂1′(u)k̂0(u)=E[U0|UD=u]=κ̂0(u)−(1−u)κ̂0′(u) \\begin{aligned} \\hat{k}_1(u) &= E[ U_1 | U_D=u] = \\hat{\\kappa}_1(u) + u \\hat{\\kappa}_1'(u) \\\\ \\hat{k}_0(u) &= E[ U_0 | U_D=u] = \\hat{\\kappa}_0(u) - (1-u) \\hat{\\kappa}_0'(u) \\end{aligned} derivatives easy compute κ\\kappa polynomial function. , Marginal Treatment Responses given : MTR̂d(u,wd,x)=E(Yd|X=x,Wd=wd,UD=u)=δ̂d+wdβ̂d+xβ̂dX+k̂d(u) \\begin{aligned} \\hat{MTR}_d(u, w_d, x) &= E(Y_d | X=x, W_d=w_d, U_D=u) = \\hat{\\delta}_{d} + w_d \\hat{\\beta}_d + x \\hat{\\beta}^X_{d} + \\hat{k}_d(u) \\end{aligned} Marginal Treatment Effects : MTÊ(u,x,w0,w1)=MTR̂1(u,w1,x)−MTR̂0(u,w0,x) \\begin{aligned} \\hat{MTE}(u, x, w_0, w_1) = \\hat{MTR}_1(u, w_1, x) - \\hat{MTR}_0(u, w_0, x) \\end{aligned}","code":""},{"path":"https://cbruneelzupanc.github.io/semiIVreg/articles/semiIVreg.html","id":"special-case-with-homogenous-treatment-effects","dir":"Articles","previous_headings":"semi-instrumental variable (semi-IV) regression","what":"Special Case with Homogenous Treatment Effects","title":"semiIVreg: A package for semi-IV regressions in R","text":"homogenous treatment effects estimates correspond potential outcome model (1)-(2), U0=U1=UU_0 = U_1 = U. leads known restrictions control functions κ0(P)\\kappa_0(P) κ1(P)\\kappa_1(P) impose stacked second stage regression. Indeed, E(U)=0=E(U|UD≤P)P+E(U|UD>P)(1−P) E(U) = 0 = E(U | U_D \\leq P) P + E(U | U_D > P) (1-P) , κ0(P)=−κ1(P)P1−P\\kappa_0(P) = -\\kappa_1(P) \\frac{P}{1-P}, one can check yields k0(u)=k1(u)=k(u)k_0(u) = k_1(u) = k(u). Thus, MTE constant (k1(u)−k0(u)=0k_1(u) - k_0(u) = 0, cancels ), equal : MTÊ(x,w0,w1)=δ̂1−δ̂0+w1β̂1−w0β̂0+x(β̂1X−β̂0X). \\hat{MTE}(x, w_0, w_1) = \\hat{\\delta}_{1} - \\hat{\\delta}_{0} + w_1 \\hat{\\beta}_1 - w_0 \\hat{\\beta}_0 + x (\\hat{\\beta}^X_{1} - \\hat{\\beta}^X_{0}). MTR still varies uu k(u)k(u) constant, also estimate .","code":""},{"path":"https://cbruneelzupanc.github.io/semiIVreg/articles/semiIVreg.html","id":"caution-about-the-estimated-standard-errors","dir":"Articles","previous_headings":"semi-instrumental variable (semi-IV) regression","what":"Caution about the Estimated Standard Errors","title":"semiIVreg: A package for semi-IV regressions in R","text":"default, return analytic standard errors accounting fact propensity score estimated semiivreg. Use semiivreg_boot obtain ‘correct’ bootstrapped confidence intervals.","code":""},{"path":"https://cbruneelzupanc.github.io/semiIVreg/articles/semiIVreg.html","id":"illustration-with-simulated-roy-model","dir":"Articles","previous_headings":"","what":"Illustration with simulated Roy model","title":"semiIVreg: A package for semi-IV regressions in R","text":"illustrates semiivreg()command reports semi-IV regression. default, reports common support plot propensity score estimated marginal treatment effects (MTE).  One can also easily extract plot marginal treatment responses (MTR):","code":"library(semiIVreg) data(roydata) # load the data from a simulated Roy model  # semi-IV regression semiiv = semiivreg(y~d|w0|w1, data=roydata) semiiv$plot$mtr"},{"path":[]},{"path":"https://cbruneelzupanc.github.io/semiIVreg/articles/semiIVreg_montecarlo.html","id":"estimator-performance","dir":"Articles","previous_headings":"","what":"Estimator Performance","title":"Performance of semi-IVs","text":"Let us compare performance semi-IV estimator different violation standard IV assumptions. note mimics Appendix Bruneel-Zupanc (2024).","code":""},{"path":"https://cbruneelzupanc.github.io/semiIVreg/articles/semiIVreg_montecarlo.html","id":"simulating-data","dir":"Articles","previous_headings":"Estimator Performance","what":"Simulating data","title":"Performance of semi-IVs","text":"simulate generalized Roy models using simul_data()function.","code":""},{"path":"https://cbruneelzupanc.github.io/semiIVreg/articles/semiIVreg_montecarlo.html","id":"valid-semi-ivs","dir":"Articles","previous_headings":"Estimator Performance > Simulating data","what":"Valid semi-IVs","title":"Performance of semi-IVs","text":"","code":"# Model Specification model_type = \"homogenous\" param_error = c(1, 1.5, -0.6) # var_u, var_v, cov_uv # if homogenous param_Z = c(0, 0, 0, 0, 1.5, 1.5, 0.9) # meanW0 state0, meanW1 state0, meanW0 state1, meanW1 state1, varW0, varW1, covW0W1 param_p = c(0, -0.5, 0.5, 0, 0, 0) # constant, alphaW0, alphaW1, alphaW0W1, effect of state, effect of parent educ param_y0 = c(3.2, 0.8, 0, 0) # intercept, effect of Wd, effect of state, effect of parent educ; param_y1 = c(3.2+0.4, 0.5, 0, 0) # the +0.2 = Average treatment effect; effect of W1, effect of state, effect of parent educ; param_genX = c(0.4, 0, 2) # probability state=1 (instead of 0), mean_parenteduc, sd_parenteduc (parenteduc drawn as continuous) # Remark: mean_V and the constant in the probit are playing the same role; normalize one to zero. param2 = list(param_error, param_Z, param_p, param_y0, param_y1, param_genX, model_type)"},{"path":"https://cbruneelzupanc.github.io/semiIVreg/articles/semiIVreg_montecarlo.html","id":"illustration-with-simulated-roy-model","dir":"Articles","previous_headings":"Estimator Performance","what":"Illustration with simulated Roy model","title":"Performance of semi-IVs","text":"illustrates semiivreg()command reports semi-IV regression. default, reports common support plot propensity score estimated marginal treatment effects (MTE).  One can also easily extract plot marginal treatment responses (MTR):","code":"library(semiIVreg) data(roydata) # load the data from a simulated Roy model  # semi-IV regression semiiv = semiivreg(y~d|w0|w1, data=roydata) semiiv$plot$mtr"},{"path":[]},{"path":"https://cbruneelzupanc.github.io/semiIVreg/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Christophe Bruneel. Author, maintainer.            https://cbruneel.com","code":""},{"path":"https://cbruneelzupanc.github.io/semiIVreg/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Bruneel C (2024). semiIVreg: Semi-Instrumental Variable Regression (semi-IV Regression). R package version 0.0.0.9000, https://cbruneelzupanc.github.io/semiIVreg/, https://www.cbruneel.com/.","code":"@Manual{,   title = {semiIVreg: Semi-Instrumental Variable Regression (semi-IV Regression)},   author = {Christophe Bruneel},   year = {2024},   note = {R package version 0.0.0.9000, https://cbruneelzupanc.github.io/semiIVreg/},   url = {https://www.cbruneel.com/}, }"},{"path":"https://cbruneelzupanc.github.io/semiIVreg/index.html","id":"semiivreg-a-package-for-semi-iv-regressions-in-r","dir":"","previous_headings":"","what":"Semi-Instrumental Variable Regression (semi-IV Regression)","title":"Semi-Instrumental Variable Regression (semi-IV Regression)","text":"package provides implementation semi-IV regressions described Bruneel-Zupanc (2024).","code":""},{"path":"https://cbruneelzupanc.github.io/semiIVreg/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Semi-Instrumental Variable Regression (semi-IV Regression)","text":"can find development version semiIVreg GitHub. can download install directly local source computer: Alternatively, can directly download GitHub repository:","code":"# If the package is in a .tar.gz file install.packages(\"/path/to/your/package.tar.gz\", repos = NULL, type = \"source\")  # If the package is in a directory install.packages(\"/path/to/your/package_directory\", repos = NULL, type = \"source\") # install.packages(\"devtools\") devtools::install_github(\"cbruneelzupanc/semiIVreg\")"},{"path":"https://cbruneelzupanc.github.io/semiIVreg/index.html","id":"semi-iv-regression","dir":"","previous_headings":"","what":"Semi-IV Regression","title":"Semi-Instrumental Variable Regression (semi-IV Regression)","text":"illustrates semiivreg()command reports semi-IV regression. default, reports common support plot propensity score estimated marginal treatment effects (MTE).  One can also easily extract plot marginal treatment responses (MTR):  details, see detailed documentation function detailed vignettes.","code":"library(semiIVreg) data(roydata) # load the data from a simulated Roy model  # semi-IV regression semiiv = semiivreg(y~d|w0|w1, data=roydata) semiiv$plot$mtr"},{"path":"https://cbruneelzupanc.github.io/semiIVreg/reference/Kappa_fun.html","id":null,"dir":"Reference","previous_headings":"","what":"Control functions transformations for selection probabilities — Kappa_fun","title":"Control functions transformations for selection probabilities — Kappa_fun","text":"functions provides pre-specified transformations control flexibly selection probabilities regression.  correspond \\(\\kappa_d(p)\\) corresponding \\(k_d(u)\\) Bruneel-Zupanc (2024).  Special functions used homogenous treatment effect specifications code different. July 2024: now, polynomial transformations encoded.","code":""},{"path":"https://cbruneelzupanc.github.io/semiIVreg/reference/Kappa_fun.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Control functions transformations for selection probabilities — Kappa_fun","text":"","code":"Kappa_fun(p, pol_degree = 5)  kdu_transform_fun(u, d, pol_degree = 5)  Kappa_homogenous_fun(p, pol_degree = 5)  ku_transform_homogenous_fun(u, pol_degree = 5)"},{"path":"https://cbruneelzupanc.github.io/semiIVreg/reference/Kappa_fun.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Control functions transformations for selection probabilities — Kappa_fun","text":"p Vector propensity scores transform flexible function. pol_degree Degree polynomial transformation. d potential outcome consider (needed \\(k_d(u)\\) heterogenous treatment effects).","code":""},{"path":"https://cbruneelzupanc.github.io/semiIVreg/reference/Kappa_fun.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Control functions transformations for selection probabilities — Kappa_fun","text":"See Andresen (2018) Bruneel-Zupanc (2024) computation details linking \\(\\kappa_d(p)\\) corresponding corresponding \\(k_d(u)\\).  \\(\\kappa_1(p) = E(U_1 | U_D \\leq p) \\) \\(\\kappa_0(p) = E(U_0 | U_D>p) \\) \\(k_d(u) = E(U_d | U_D=u)\\). case homogenous treatment effects: \\(k_0(u) = k_1(u)\\). provides restriction \\(\\kappa\\), hence special functions.","code":""},{"path":"https://cbruneelzupanc.github.io/semiIVreg/reference/Kappa_fun.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Control functions transformations for selection probabilities — Kappa_fun","text":"","code":"v = seq(0.1, 0.9, by=0.1) # Transformations for general Heterogenous TE functions: Kappa_fun(p=v, pol_degree=6) #>         1    2     3      4       5        6 #>  [1,] 0.1 0.01 0.001 0.0001 0.00001 0.000001 #>  [2,] 0.2 0.04 0.008 0.0016 0.00032 0.000064 #>  [3,] 0.3 0.09 0.027 0.0081 0.00243 0.000729 #>  [4,] 0.4 0.16 0.064 0.0256 0.01024 0.004096 #>  [5,] 0.5 0.25 0.125 0.0625 0.03125 0.015625 #>  [6,] 0.6 0.36 0.216 0.1296 0.07776 0.046656 #>  [7,] 0.7 0.49 0.343 0.2401 0.16807 0.117649 #>  [8,] 0.8 0.64 0.512 0.4096 0.32768 0.262144 #>  [9,] 0.9 0.81 0.729 0.6561 0.59049 0.531441 #> attr(,\"degree\") #> [1] 1 2 3 4 5 6 #> attr(,\"class\") #> [1] \"poly\"   \"matrix\" k1u = kdu_transform_fun(v, d=1, pol_degree=6)  # Transformations for Homogenous TE functions: Kappa_homogenous_fun(p=v, pol_degree=6) #>       const   1    2     3      4       5        6 #>  [1,]     1 0.1 0.01 0.001 0.0001 0.00001 0.000001 #>  [2,]     1 0.2 0.04 0.008 0.0016 0.00032 0.000064 #>  [3,]     1 0.3 0.09 0.027 0.0081 0.00243 0.000729 #>  [4,]     1 0.4 0.16 0.064 0.0256 0.01024 0.004096 #>  [5,]     1 0.5 0.25 0.125 0.0625 0.03125 0.015625 #>  [6,]     1 0.6 0.36 0.216 0.1296 0.07776 0.046656 #>  [7,]     1 0.7 0.49 0.343 0.2401 0.16807 0.117649 #>  [8,]     1 0.8 0.64 0.512 0.4096 0.32768 0.262144 #>  [9,]     1 0.9 0.81 0.729 0.6561 0.59049 0.531441 ku = ku_transform_homogenous_fun(v, pol_degree=6) # no d anymore, same for both d here;"},{"path":"https://cbruneelzupanc.github.io/semiIVreg/reference/mtr_fun.html","id":null,"dir":"Reference","previous_headings":"","what":"MTE and MTR sub-estimation functions — mtr_fun","title":"MTE and MTR sub-estimation functions — mtr_fun","text":"functions allow estimate mte mtr, confidence intervals, based coefficients estimated main model main function. details can found Bruneel-Zupanc (2024).  Different formulas must applied depending whether treatment homogenous heterogenous.","code":""},{"path":"https://cbruneelzupanc.github.io/semiIVreg/reference/mtr_fun.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"MTE and MTR sub-estimation functions — mtr_fun","text":"","code":"mtr_fun(coeff, vcov, var_treatment, var_cov_2nd, ref_indiv, seq_u,                homogenous=FALSE, pol_degree, conf_level, t_value, Xdat)"},{"path":"https://cbruneelzupanc.github.io/semiIVreg/reference/mtr_plot_fun.html","id":null,"dir":"Reference","previous_headings":"","what":"Marginal Treatment Effect (MTE) and Responses (MTR) plots — mtr_plot_fun","title":"Marginal Treatment Effect (MTE) and Responses (MTR) plots — mtr_plot_fun","text":"Plot MTR MTE estimated curves confidence intervals.","code":""},{"path":"https://cbruneelzupanc.github.io/semiIVreg/reference/mtr_plot_fun.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Marginal Treatment Effect (MTE) and Responses (MTR) plots — mtr_plot_fun","text":"","code":"mtr_plot_fun(dat_plot, common_supp)  mte_plot_fun(dat_plot, common_supp)"},{"path":"https://cbruneelzupanc.github.io/semiIVreg/reference/mtr_plot_fun.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Marginal Treatment Effect (MTE) and Responses (MTR) plots — mtr_plot_fun","text":"dat_plot Data frame estimated MTE MTR values confidence intervals. Must contain specific variables: Phat, mtr0, mtr1, mtr0_lwr, mtr1_lwr, mtr0_upr, mtr1_upr, mte, mte_lwr, mte_upr. common_supp Vector two values indicating common support plot. Default full support 0,1. colMTE, colD0, colD1 Color MTE, MTR0 MTR1 curves.","code":""},{"path":"https://cbruneelzupanc.github.io/semiIVreg/reference/mtr_plot_fun.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Marginal Treatment Effect (MTE) and Responses (MTR) plots — mtr_plot_fun","text":"Attention: default semiivreg confidence intervals computed analytically, include error first stage propensity score. corrected semiivreg_boot bootstrapping entire estimation obtain confidence intervals.","code":""},{"path":"https://cbruneelzupanc.github.io/semiIVreg/reference/roydata.html","id":null,"dir":"Reference","previous_headings":"","what":"Generalized Roy Data with Heterogenous Treatment Effects — roydata","title":"Generalized Roy Data with Heterogenous Treatment Effects — roydata","text":"data frame 100,000 observations drawn simulated Roy model heterogenous treatment effects using simul_data().","code":""},{"path":"https://cbruneelzupanc.github.io/semiIVreg/reference/roydata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generalized Roy Data with Heterogenous Treatment Effects — roydata","text":"","code":"data(roydata)"},{"path":"https://cbruneelzupanc.github.io/semiIVreg/reference/roydata.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Generalized Roy Data with Heterogenous Treatment Effects — roydata","text":"data contains following information observed standard dataset: y observed outcome. d treatment. w0, w1 semi-IVs entering D=0 D=1. Xbinary, Xcontinuous Two covariates, one binary one continuous. also reports typically unobserved potential outcomes shocks: y0, y1 unobserved potential outcomes. P unobserved true treatment probability. latent, V, Ud, U0, U1 unobserved shocks V. Ud normalized V ranks. U0 U1 outcome shocks. latent gives latent utility term selection equation. data generated using following R code:","code":"N=100000; set.seed(1234) model_type = \"heterogenous\" param_error = c(1, 1, 0.6, 0.5) param_Z = c(0, 0, 0, 0, 1.5, 1.5, 0.9) param_p = c(0, -0.7, 0.7, 0, 0, 0) param_y0 = c(3.2, 0.8, 0, 0) param_y1 = c(3.2+0.4, 0.5, 0, 0) param_genX = c(0.4, 0, 2)  roydata = simul_data(N, model_type, param_y0, param_y1,                      param_p, param_Z, param_genX, param_error)"},{"path":"https://cbruneelzupanc.github.io/semiIVreg/reference/roydata2.html","id":null,"dir":"Reference","previous_headings":"","what":"Generalized Roy Data with Homogenous Treatment Effects — roydata2","title":"Generalized Roy Data with Homogenous Treatment Effects — roydata2","text":"data frame 100,000 observations drawn simulated Roy model homogenous treatment effects using simul_data().","code":""},{"path":"https://cbruneelzupanc.github.io/semiIVreg/reference/roydata2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generalized Roy Data with Homogenous Treatment Effects — roydata2","text":"","code":"data(roydata2)"},{"path":"https://cbruneelzupanc.github.io/semiIVreg/reference/roydata2.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Generalized Roy Data with Homogenous Treatment Effects — roydata2","text":"data contains following information observed standard dataset: y observed outcome. d treatment. w0, w1 semi-IVs entering D=0 D=1. Xbinary, Xcontinuous Two covariates, one binary one continuous. also reports typically unobserved potential outcomes shocks: y0, y1 unobserved potential outcomes. P unobserved true treatment probability. latent, V, Ud, U0, U1 unobserved shocks V. Ud normalized V ranks. U0 U1 outcome shocks. latent gives latent utility term selection equation. data generated using following R code:","code":"N = 100000; set.seed(1234) model_type = \"homogenous\" param_error = c(1, 1.5, -0.6) param_Z = c(0, 0, 0, 0, 1.5, 1.5, 0.9) param_p = c(0, -0.5, 0.5, 0, 0, 0) param_y0 = c(3.2, 0.8, 0, 0) param_y1 = c(3.2+0.4, 0.5, 0, 0) param_genX = c(0.4, 0, 2)  roydata2 = simul_data(N, model_type, param_y0, param_y1,                       param_p, param_Z, param_genX, param_error)"},{"path":"https://cbruneelzupanc.github.io/semiIVreg/reference/semiivreg.html","id":null,"dir":"Reference","previous_headings":"","what":"Semi-IV Regression Function — semiivreg","title":"Semi-IV Regression Function — semiivreg","text":"Semi-IV regression function Bruneel-Zupanc (2024). Syntax inspired ivreg. Returns MTE MTR curves confidence intervals.  Also returns coefficient estimated ATE case treatment effect homogenous.  estimation almost instantaneous (seconds ). default, return analytic standard errors accounting fact propensity score estimated semiivreg. Use semiivreg_boot obtain 'correct' bootstrapped confidence intervals (takes bit longer).","code":""},{"path":"https://cbruneelzupanc.github.io/semiIVreg/reference/semiivreg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Semi-IV Regression Function — semiivreg","text":"","code":"semiivreg(formula, data, propensity_formula=NULL, ref_indiv =NULL,            firststage_model=\"probit\",            pol_degree_transform = 5, conf_level = 0.05, common_supp_trim=c(0,1),            trimming_value=NULL, automatic_trim=FALSE, plotting=TRUE)  semiivreg_boot(formula, Nboot=500, data, propensity_formula=NULL, ref_indiv =NULL,                firststage_model=\"probit\",                pol_degree_transform = 5, common_supp_trim=c(0,1), trimming_value = NULL,                automatic_trim = FALSE, plotting=TRUE, conf_level = 0.05, CI_method = \"delta\")"},{"path":"https://cbruneelzupanc.github.io/semiIVreg/reference/semiivreg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Semi-IV Regression Function — semiivreg","text":"formula Formula regression, form outcome ~ treatment | semi-iv0 | semi-iv1 | commoncovariates.  treatment variable binary (0, 1).  covariates effect differs D=1 D=0 included semi-iv0 semi-iv1. data Dataframe containing data. propensity_formula Formula 1st stage. nothing specified, just runs probit d ~ semi-iv0 + semi-iv1 + covariates (removing redundant variables). ref_indiv Specify reference individual (terms covariates) evaluate function.  default takes average value numerical covariates, reference level factors. firststage_model default, first stage probit model. Can specify another model (e.g., \"logit\"). pol_degree_transform Degree polynomial transformation control function. conf_level Confidence level confidence intervals. common_supp_trim Vector two values indicating set propensity scores evaluate function.  Default full support [0,1]. can trimmed manually. trimming_value Can either vector c(0.05, 0.95) indicating quantile propensity score keep observations D=0 D=1.  Can also single value, case symmetric trimming .  Inserting trimming_value generates automatic_trim = TRUE automatically. automatic_trim TRUE, estimation second stage done common_support . plotting TRUE wants plot end function, FALSE otherwise. Nboot Number bootstrap samples. CI_method \"delta\" delta method, \"curve\" bootstrap MTE curves directly.","code":""},{"path":"https://cbruneelzupanc.github.io/semiIVreg/reference/semiivreg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Semi-IV Regression Function — semiivreg","text":"list following elements: $data Returns data output estimation used plot MTE MTR. details: $RES Dataframe estimated MTE MTR values confidence intervals. $RES_homogenous Dataframe estimated MTE MTR values confidence intervals homogenous treatment effects. $orig_data Original data used estimation added propensity score estimated, named Phat. $ref_indiv Reference individual(s) evaluate MTE MTR. $estimate Returns estimation : $est Second stage estimate \\(E[Y_d | D, W_d, X, \\hat{P}]\\) \\(\\hat{P}\\) controlled flexible control function (polynomial) \\(\\kappa_d(P)\\). $propensity First stage estimate propensity score. $est_homogenous Homogenous TE Second stage estimate \\(E[Y_d | D, W_d, X, \\hat{P}]\\)  Homogenous TE implies restriction \\(\\kappa_0(P) = -\\kappa_1(P) \\frac{P}{1-P}\\) \\(E(U)=0\\).  ensures \\(k_0(u) = k_1(u)\\), cf Bruneel-Zupanc (2024). $homogenous_TE Extract ATE estimation case homogenous treatment effects (can observed est_homogenous well). $plot Returns separately following plot objects: supp, mtr, mte, mtr_homogenous, mte_homogenous. $supp Returns common support propensity score Phat two treatment group. $call Returns call function.","code":""},{"path":"https://cbruneelzupanc.github.io/semiIVreg/reference/semiivreg.html","id":"the-estimated-model","dir":"Reference","previous_headings":"","what":"The estimated model","title":"Semi-IV Regression Function — semiivreg","text":"semiivreg estimates marginal treatment effect (MTE) marginal treatment response (MTR) following model. potential outcomes given $$ Y_0 = \\delta_{0} + W_0 \\beta_0 + X \\beta^X_{0} + U_0,      \\quad \\quad \\quad (1) $$ $$ Y_1 = \\delta_{1} + W_1 \\beta_1 + X \\beta^X_{1} + U_1,      \\quad \\quad \\quad (2) $$ selection rule $$ \\begin{aligned} D^* &= g(W_0, W_1, X) - V \\\\ &= - ( \\alpha + \\alpha_0 W_0 + \\alpha_1 W_1 + \\alpha_{X} X ) - V, \\quad \\quad \\quad (3) \\\\ \\text{ } \\quad D &= \\mathbb{}(D^* > 0), \\end{aligned} $$ semi-IVs. \\(W_0\\) (respectively \\(W_1\\)) semi-IVs excluded \\(Y_1\\) (resp. \\(Y_0\\)). \\(W_0\\) \\(W_1\\) may contain several variables. Nonparametric identification requires \\(W_d\\) contains least one excluded variable (see Bruneel-Zupanc, 2024). Covariates. \\(X\\) covariates affect potential outcomes. One can restrict effect \\(X\\) across potential outcomes (.e., \\(\\beta^X_{0} = \\beta^X_{1}\\)). , specify: semiivreg(y~d|w0|w1|x, data). general, different effect covariates across alternatives (.e., \\(\\beta^X_{0} \\neq \\beta^X_{1}\\)). specified including covariates semi-IVs: semiivreg(y~d|w0+x|w1+x, data). Unobservables. \\(U_0\\) \\(U_1\\) general unobservables (may include several shocks, may across alternatives) affecting outcomes. \\(V\\) scalar unobservable affects selection. lower \\(V\\), likely one select treatment. Nonparametric identification requires independence, .e., \\((U_0, U_1, V) \\perp (W_0, W_1) | X\\). estimation , additionally assume additive separability covariates \\(X\\), .e., \\(E(U_d | V, X) = E(U_d | V)\\) \\(d=0,1\\). assumption necessary identification, estimation. standard simplification helps estimation. See Carneiro, Heckman Vytlacil (2011), Brinch, Mogstad Wiswall (2017) Andresen (2018) comparable examples estimation MTE IVs.","code":""},{"path":"https://cbruneelzupanc.github.io/semiIVreg/reference/semiivreg.html","id":"estimation-procedure","dir":"Reference","previous_headings":"","what":"Estimation Procedure","title":"Semi-IV Regression Function — semiivreg","text":"estimation procedure follow closely counterpart estimation MTE standard IVs, see e.g., Andresen (2018). command estimates marginal treatment responses marginal treatment effects, .e., $$ \\begin{aligned} MTR_d(u, w_d, x) &= E(Y_d | X=x, W_d=w_d, U_D=u), \\\\ MTE(u, x, w_0, w_1) &= E(Y_1 - Y_0 | X = x, W_0=w_0, W_1=w_1, U_D=u) \\\\ &= MTR_1(u, w_1, x) - MTR_0(u, w_0, x), \\end{aligned} $$ \\(U_D = F_V(V) \\sim \\mathcal{U}(0, 1)\\) normalized unobserved resistance treatment. estimation proceeds two stage. First stage. Estimate propensity score \\(\\hat{P}\\) treatment selection equation (3).  default, function \\(g(\\cdot)\\) given simple linear specification , code allows specify first stage. example: Second stage. Estimate control function \\(\\kappa_d(P)\\) potential outcomes \\(Y_d\\) given propensity score \\(P\\) covariates \\(X\\). control function estimated flexible polynomial transformation propensity score. estimation done stacked regression potential outcomes specification (1)-(2): $$ \\begin{aligned} E[Y|W_0, W_1, X, \\hat{P}] = &D \\times ( \\delta_{1} + W_1 \\beta_1 + X \\beta^X_{1} + \\kappa_1(\\hat{P}) ) + \\\\            &(1-D) \\times ( \\delta_{0} + W_0 \\beta_0 + X \\beta^X_{0} + \\kappa_0(\\hat{P})). \\end{aligned}  $$ control functions sample estimate (using estimate \\(\\hat{P}\\)) theoretical counterpart: $$\\begin{aligned}  \\kappa_1(P) &= E[ U_1 | D=1, W_1, W_0, X,P] = E[U_1|D=1, P] = E[U_1 | U_D \\leq P] \\\\  \\kappa_0(P) &= E[ U_0 | D=0, W_1, W_0, X,P] = E[U_0|D=0, P] = E[U_0 | U_D > P]  \\end{aligned}$$ default, estimate flexible polynomials degree pol_degree_transform \\(\\kappa_0(P)\\) \\(\\kappa_1(P)\\) . semi-IVs covariates, note \\(W_0\\) \\(W_1\\) can flexible transformations (polynomial, splines) specific variables, outcome equation quite flexible (also specify interactions \\(W_d\\) \\(X\\)). equation second stage estimated, need estimate parameters, just take proper derivatives estimated functional form. : $$\\begin{aligned}  \\hat{k}_1(u) &= E[ U_1 | U_D=u] = \\hat{\\kappa}_1(u) + u \\hat{\\kappa}_1'(u) \\\\  \\hat{k}_0(u) &= E[ U_0 | U_D=u] = \\hat{\\kappa}_0(u) - (1-u) \\hat{\\kappa}_0'(u),  \\end{aligned}$$ derivatives easy compute \\(\\kappa\\) polynomial function.  , Marginal Treatment Responses given : $$ \\begin{aligned} \\hat{MTR}_d(u, w_d, x) &= E(Y_d | X=x, W_d=w_d, U_D=u) = \\hat{\\delta}_{d} + w_d \\hat{\\beta}_d + x \\hat{\\beta}^X_{d} + \\hat{k}_d(u), \\end{aligned} $$Marginal Treatment Effects $$ \\begin{aligned} \\hat{MTE}(u, x, w_0, w_1) = \\hat{MTR}_1(u, w_1, x) - \\hat{MTR}_0(u, w_0, x). \\end{aligned} $$","code":"semiivreg(y~d|w0+x|w1+x, data,                         propensity_formula = d~w0+w1+w0:w1+w0:x+w1:x+I(w0^2)+I(w1^2))"},{"path":"https://cbruneelzupanc.github.io/semiIVreg/reference/semiivreg.html","id":"special-case-with-homogenous-treatment-effects","dir":"Reference","previous_headings":"","what":"Special case with Homogenous Treatment Effects","title":"Semi-IV Regression Function — semiivreg","text":"homogenous treatment effects estimates correspond potential outcome model (1)-(2), \\(U_0 = U_1 = U\\). leads known restrictions control functions \\(\\kappa_0(P)\\) \\(\\kappa_1(P)\\) impose stacked second stage regression. Indeed, $$ E(U) = 0 = E(U | U_D \\leq P) P + E(U | U_D > P) (1-P) $$ , \\(\\kappa_0(P) = -\\kappa_1(P) \\frac{P}{1-P}\\), one can check yields \\(k_0(u) = k_1(u) = k(u)\\). Thus, MTE constant (\\(k_1(u) - k_0(u) = 0\\), cancels ), equal : $$ \\hat{MTE}(x, w_0, w_1) = \\hat{\\delta}_{1} - \\hat{\\delta}_{0} + w_1 \\hat{\\beta}_1 - w_0 \\hat{\\beta}_0 + x (\\hat{\\beta}^X_{1} - \\hat{\\beta}^X_{0}). $$ MTR still varies \\(u\\) \\(k(u)\\) constant, also estimate .","code":""},{"path":"https://cbruneelzupanc.github.io/semiIVreg/reference/semiivreg.html","id":"caution-about-the-estimated-standard-errors","dir":"Reference","previous_headings":"","what":"Caution about the Estimated Standard errors","title":"Semi-IV Regression Function — semiivreg","text":"default, return analytic standard errors accounting fact propensity score estimated semiivreg. Use semiivreg_boot obtain 'correct' bootstrapped confidence intervals.","code":""},{"path":"https://cbruneelzupanc.github.io/semiIVreg/reference/semiivreg.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Semi-IV Regression Function — semiivreg","text":"Bruneel-Zupanc, C. (2024). (fully) exclude , necessary! Identification semi-IVs. arXiv preprint arXiv:2303.12667. empirical applications estimation Marginal Treatment Effects standard IVs, see example:  Carneiro, P., Heckman, J. J., & Vytlacil, E. J. (2011). Estimating marginal returns education. American Economic Review, 101(6), 2754-2781. Brinch, C. N., Mogstad, M., & Wiswall, M. (2017). Beyond LATE discrete instrument. Journal Political Economy, 125(4), 985-1039. particular, see Andresen, M. E. (2018). Exploring marginal treatment effects: Flexible estimation using Stata. Stata Journal, 18(1), 118-158.","code":""},{"path":"https://cbruneelzupanc.github.io/semiIVreg/reference/semiivreg.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Semi-IV Regression Function — semiivreg","text":"Christophe Bruneel-Zupanc, cbruneel.com","code":""},{"path":"https://cbruneelzupanc.github.io/semiIVreg/reference/semiivreg.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Semi-IV Regression Function — semiivreg","text":"","code":"# Load data: data(roydata)  # Run the semi-IV regression semiiv = semiivreg(y~d|w0|w1, data=roydata)  semiiv = semiivreg(y~d|w0|w1|Xbinary + Xcontinuous, data=roydata) # with covariates  semiiv = semiivreg(y~d|w0+Xbinary|w1+Xbinary|Xcontinuous, data=roydata)  # Xbinary has different effect on Y0 and Y1, Xcontinuous has the same. semiiv = semiivreg(y~d|w0|w1, data=roydata, propensity_formula = d~w0+w1+w0:w1)  # if want to specify another first stage  semiiv$plot$mtr # if want to plot mtr_plot"},{"path":"https://cbruneelzupanc.github.io/semiIVreg/reference/simul_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate data from the Generalized Roy Model with semi-IVs — simul_data","title":"Simulate data from the Generalized Roy Model with semi-IVs — simul_data","text":"function simulates data Generalized Roy Model semi-IVs.  simulation specified Bruneel-Zupanc (2024).","code":""},{"path":"https://cbruneelzupanc.github.io/semiIVreg/reference/simul_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate data from the Generalized Roy Model with semi-IVs — simul_data","text":"","code":"simul_data(N, model_type=\"heterogenous\",            param_y0, param_y1, param_p, param_Z, param_genX, param_error)"},{"path":"https://cbruneelzupanc.github.io/semiIVreg/reference/simul_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate data from the Generalized Roy Model with semi-IVs — simul_data","text":"N Number observations model_type Type model: \"heterogenous\" \"homogenous\" param_y0 Parameters Y0 = \\((\\delta_0, \\beta_0, \\beta_{0X_1}, \\beta_{0X_2})\\).  .e., intercept, effects w0, \\(X_1\\), \\(X_2\\) \\(Y_0\\). param_y1 Parameters Y1: \\((\\delta_1, \\beta_1, \\beta_{1X_1}, \\beta_{1X_2})\\).  .e., intercept, effects w1, \\(X_1\\), \\(X_2\\) \\(Y_1\\). param_p Parameters selection: \\((\\alpha, \\alpha_0, \\alpha_1, \\alpha_2, \\alpha_{X_1}, \\alpha_{X_2})\\)  .e., intercept effects w0, w1, w0w1, Xbinary, Xcontinuous latent utility. param_Z Parameters simulation semi-IVs:  \\((\\mu_{W0,x_1=0}, \\mu_{W1,x_1=0}, \\mu_{W0,x_1=1}, \\mu_{W1,x_1=1}, \\sigma^2_{W0}, \\sigma^2_{W1}, \\sigma_{W0W1})\\). param_genX Parameters covariates: \\((p_{X_1}, \\mu_{X_2}, \\sigma^2_{X_2})\\). param_error Parameters error terms: depends model_type:  heterogenous: \\((\\sigma^2_{U0}, \\sigma^2_{U1}, \\sigma_{U0U1}, \\sigma^2_{\\text{cost}})\\)  homogenous: \\((\\sigma^2_{U}, \\sigma^2_{V}, \\sigma_{UV})\\)","code":""},{"path":"https://cbruneelzupanc.github.io/semiIVreg/reference/simul_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate data from the Generalized Roy Model with semi-IVs — simul_data","text":"data frame following columns: y observed outcome. d treatment. w0, w1 semi-IVs entering D=0 D=1. Xbinary, Xcontinuous Two covariates, one binary one continuous. y0, y1 unobserved potential outcomes. P unobserved true treatment probability. latent, V, Ud, U0, U1 unobserved shocks V. Ud normalized V ranks. U0 U1 outcome shocks. latent gives latent utility term selection equation.","code":""},{"path":"https://cbruneelzupanc.github.io/semiIVreg/reference/simul_data.html","id":"the-generalized-roy-model-","dir":"Reference","previous_headings":"","what":"The Generalized Roy model.","title":"Simulate data from the Generalized Roy Model with semi-IVs — simul_data","text":"function simulates generalized Roy model described Bruneel-Zupanc (2024). Potential Outcomes. potential outcomes (e.g., earnings) given : $$ Y_0 = \\delta_{0} + \\beta_{0} W_0 + X \\beta_{0X} + U_0, $$ $$ Y_1 = \\delta_{1} + \\beta_{1} W_1 + X \\beta_{1X} + U_1, $$ \\(W_0, W_1\\) observed semi-IVs excluded \\(Y_1\\) \\(Y_0\\) respectively, \\(X=(X_1, X_2)\\) vector binary (\\(X_1\\), e.g., location) continuous (\\(X_2\\), e.g., education parents) observable covariates, \\(U_0, U_1\\) unobservable errors. Selection problem. observe outcome $$ Y = (1-D) Y_0 + D Y_1. $$ \\(D\\) represents (binary) treatment decision (e.g., education choice), given following selection rule: $$ \\begin{aligned} D^* &= g(W_0, W_1, X) - V \\\\ &= - ( \\alpha + \\alpha_0 W_0 + \\alpha_1 W_1 + \\alpha_2 W_0 \\times W_1 + \\alpha_{X_1} X_1 + \\alpha_{X_2} X_2) - V, \\\\ \\text{ } \\quad D &= \\mathbb{}(D^* > 0), \\end{aligned} $$ \\(V\\) main unobservable probability shock, higher \\(V\\), likely one treated. Note normalize \\(U_D=F_{V}(V)\\) get normalized probability shock \\(U_D \\sim \\mathcal{U}(0, 1)\\). \\(U_D\\) can interpreted unobserved resistance treatment, closer \\(U_D\\) 0, likely individual treated. specification yields probability treatment given : $$ \\textrm{Pr}(D=1 | W_0, W_1, X) = \\textrm{Pr}(V < g(W_0, W_1, X)). $$ Thus, ceteris paribus, lower \\(g\\), higher probability treatment. Unobservables specification. specification unobservable depends model type. general heterogenous treatment effect model, : #' $$ \\begin{pmatrix} U_0 \\\\ U_1 \\end{pmatrix} \\sim \\mathcal{N}\\left( \\begin{pmatrix} 0 \\\\ 0 \\end{pmatrix}, \\begin{pmatrix} \\sigma^2_{U0} & \\sigma_{U0U1} \\\\ \\sigma_{U0U1} & \\sigma^2_{U1} \\end{pmatrix} \\right), $$ $$ C \\sim \\mathcal{N}(\\mu_{\\text{cost}}, \\sigma^2_{\\text{cost}}), $$ $$ V = -(U_1 - U_0 - C). $$ homogeneous treatment effect model: $$ \\begin{pmatrix} U \\\\ V \\end{pmatrix} \\sim \\mathcal{N}\\left( \\begin{pmatrix} 0 \\\\ \\mu_{V} \\end{pmatrix}, \\begin{pmatrix} \\sigma^2_{U} & \\sigma_{UV} \\\\ \\sigma_{UV} & \\sigma^2_{V} \\end{pmatrix} \\right), $$ $$ U_0 = U_1 = U. $$ cases, \\(V\\) normally distributed, selection equation probit model. Covariates semi-IVs specification. covariates generated $$ X_1 \\sim \\text{Bernoulli}(p_{X_1}) \\text{ } X_1 \\sim \\mathcal{N}(\\mu_{X_2}, \\sigma^2_{X_2}). $$ semi-IVs \\(X_1\\)-specific given : $$ \\begin{pmatrix} W_0 \\\\ W_1 \\end{pmatrix} \\sim \\mathcal{N}\\left( \\begin{pmatrix} \\mu_{W0,x_1} \\\\ \\mu_{W1,x_1} \\end{pmatrix}, \\begin{pmatrix} \\sigma^2_{W0} & \\sigma_{W0W1} \\\\ \\sigma_{W0W1} & \\sigma^2_{W1} \\end{pmatrix} \\right), $$ means \\(\\mu_{W0,x_1}\\) \\(\\mu_{W1,x_1}\\) depend binary covariate \\(X_1=x_1\\).","code":""},{"path":"https://cbruneelzupanc.github.io/semiIVreg/reference/simul_data.html","id":"simulating-standard-iv-mte-models-","dir":"Reference","previous_headings":"","what":"Simulating standard IV MTE models.","title":"Simulate data from the Generalized Roy Model with semi-IVs — simul_data","text":"function can used model problem IVs used estimate Marginal Treatment Effects, setting effect semi-IVs respective outcomes zero. coefficients can adjusted mimic Roy models Heckman, Urzua Vytlacil (2006), Heckman Vytlacil (2007). Small adjustments inside function allow mimic simulation Andresen (2018) (mtefe Stata), 2 regions (state).","code":""},{"path":"https://cbruneelzupanc.github.io/semiIVreg/reference/simul_data.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Simulate data from the Generalized Roy Model with semi-IVs — simul_data","text":"Bruneel-Zupanc, C. (2023). (fully) exclude , necessary! Identification semi-IVs. arXiv preprint arXiv:2303.12667. Andresen, M. E. (2018). Exploring marginal treatment effects: Flexible estimation using Stata. Stata Journal, 18(1), 118-158. Heckman, J. J., Urzua, S., & Vytlacil, E. (2006). Understanding instrumental variables models essential heterogeneity. Review Economics Statistics, 88(3), 389-432. Heckman, J. J., & Vytlacil, E. J. (2007). Econometric evaluation social programs, part II: Using marginal treatment effect organize alternative econometric estimators evaluate social programs, forecast effects new environments. Handbook econometrics, 6, 4875-5143.","code":""},{"path":"https://cbruneelzupanc.github.io/semiIVreg/reference/simul_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulate data from the Generalized Roy Model with semi-IVs — simul_data","text":"","code":"N = 10000; set.seed(12345)  # Example 1: Heterogenous Treatment Effects. model_type = \"heterogenous\" param_error = c(1, 1, 0.6, 0.5) # var_u0, var_u1, cov_u0u1, var_cost param_Z = c(0, 0, 0, 0, 1.5, 1.5, 0.9) # meanW0 Xbinary0, meanW1 Xbinary0, meanW0 Xbinary1, meanW1 Xbinary1, varW0, varW1, covW0W1 param_p = c(0, -0.7, 0.7, 0, 0, 0) # constant, W0, W1, W0xW1, Xbinary, Xcontinuous param_y0 = c(3.2, 0.8, 0, 0) # intercept, W0, Xbinary, Xcontinuous; param_y1 = c(3.2+0.4, 0.5, 0, 0) # the +0.4 = ATE; W1, Xbinary, Xcontinuous; param_genX = c(0.4, 0, 2)  data = simul_data(N, model_type, param_y0, param_y1, param_p, param_Z, param_genX, param_error)   # Example 2: Homogenous Treatment Effects (constant MTE) model_type = \"homogenous\" param_error = c(1, 1.5, -0.6) # var_u, var_v, cov_uv param_Z = c(0, 0, 0, 0, 1.5, 1.5, 0.9) param_p = c(0, -0.5, 0.5, 0, 0, 0) # the constant <=> mean_V param_y0 = c(3.2, 0.8, 0, 0) param_y1 = c(3.2+0.4, 0.5, 0, 0) param_genX = c(0.4, 0, 2)  data1 = simul_data(N, model_type, param_y0, param_y1, param_p, param_Z, param_genX, param_error)   # Set the effects of w1 or w0 on its outcome to zero if want a valid IV, e.g., # param_y1 = c(3.2+0.4, 0, 0, 0) # w1 is a valid IV # or: param_y0 = c(3.2, 0, 0, 0) # w0 is a valid IV"},{"path":"https://cbruneelzupanc.github.io/semiIVreg/reference/supp_plot_fun.html","id":null,"dir":"Reference","previous_headings":"","what":"Propensity score support plot — supp_plot_fun","title":"Propensity score support plot — supp_plot_fun","text":"Returns support plot treatment status propensity score Phat included dataset.","code":""},{"path":"https://cbruneelzupanc.github.io/semiIVreg/reference/supp_plot_fun.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Propensity score support plot — supp_plot_fun","text":"","code":"supp_plot_fun(data, common_supp)"},{"path":"https://cbruneelzupanc.github.io/semiIVreg/reference/supp_plot_fun.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Propensity score support plot — supp_plot_fun","text":"data Dataframe containing treatment status, factor variable Treatment propensity score name Phat. common_supp Vector two values indicating common support plot. Default full support 0,1. colMTE, colD0, colD1 Color MTE, MTR0 MTR1 curves.","code":""},{"path":"https://cbruneelzupanc.github.io/semiIVreg/reference/supp_plot_fun.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Propensity score support plot — supp_plot_fun","text":"","code":"# Plot the true common support (with true - unobserved - propensity score) # Using simulated data. data(roydata); data=roydata;  # Syntax adjustment to use the function data$Treatment = factor(data$d) data$Phat = data$P # P is unobserved, we only know it because simulation here  #common_supp can be determined by looking at the plot - it's not necessary, just a graphical option supp_P0 = c(min(data$Phat[which(data$d == 0)]), max(data$Phat[which(data$d== 0)])) supp_P1 = c(min(data$Phat[which(data$d == 1)]), max(data$Phat[which(data$d == 1)])) common_supp = c(max(supp_P0[1], supp_P1[1]), min(supp_P0[2], supp_P1[2]))  supp_plot = supp_plot_fun(data, common_supp); supp_plot"}]
