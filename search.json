[{"path":"https://cbruneelzupanc.github.io/semiIVreg/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 semiIVreg authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://cbruneelzupanc.github.io/semiIVreg/articles/semiIVreg.html","id":"overview","dir":"Articles","previous_headings":"","what":"Overview","title":"semiIVreg: a package for semi-IV regression in R","text":"package provides estimation procedure semi-IVs, Bruneel-Zupanc (2024). particular, main function semiivreg() estimates marginal treatment effect (MTE) marginal treatment response (MTR).","code":""},{"path":"https://cbruneelzupanc.github.io/semiIVreg/articles/semiIVreg.html","id":"installation","dir":"Articles","previous_headings":"","what":"Installation","title":"semiIVreg: a package for semi-IV regression in R","text":"development version semiIVreg hosted GitHub . can conveniently installed via install_github() function remotes package.","code":"remotes::install_github(\"cbruneelzupanc/semiIVreg\")"},{"path":[]},{"path":"https://cbruneelzupanc.github.io/semiIVreg/articles/semiIVreg.html","id":"the-model","dir":"Articles","previous_headings":"semi-instrumental variable (semi-IV) regression","what":"The model","title":"semiIVreg: a package for semi-IV regression in R","text":"semiivreg estimates marginal treatment effect (MTE) marginal treatment response (MTR) following model. potential outcomes given \\[ Y_0 = \\delta_{0} + W_0 \\beta_0 + X \\beta^X_{0} + U_0, \\quad \\quad \\quad (1) \\] \\[ Y_1 = \\delta_{1} + W_1 \\beta_1 + X \\beta^X_{1} + U_1, \\quad \\quad \\quad (2) \\] selection rule \\[ \\begin{aligned} D^* &= g(W_0, W_1, X) - V \\\\ &= - (\\alpha + \\alpha_0 W_0 + \\alpha_1 W_1 + \\alpha_{X} X ) - V, \\quad \\quad \\quad (3) \\\\ \\text{ } \\quad D &= \\mathbb{}(D^* > 0), \\end{aligned} \\] semi-IVs: \\(W_0\\) (respectively \\(W_1\\)) semi-IVs excluded \\(Y_1\\) (resp. \\(Y_0\\)). \\(W_0\\) \\(W_1\\) may contain several variables. Nonparametric identification requires \\(W_d\\) contains least one excluded variable (see Bruneel-Zupanc (2024)). Covariates: \\(X\\) covariates affect potential outcomes. default, wants different effect covariates across alternatives, (.e., \\(\\beta^X_{0} \\neq \\beta^X_{1}\\)). , include covariates separately MTR formulas: semiivreg(y~d|w0+x|w1+x, data). One can restrict effect \\(X\\) across potential outcomes (.e., \\(\\beta^X_{0} = \\beta^X_{1}\\)). , specify: Unobservables: \\(U_0\\) \\(U_1\\) general unobservables (may include several shocks, may across alternatives) affecting outcomes. \\(V\\) scalar unobservable affects selection. lower \\(V\\), likely one select treatment. Nonparametric identification requires independence, .e., \\((U_0, U_1, V) \\perp (W_0, W_1) | X\\). estimation , additionally assume additive separability covariates \\(X\\), .e., \\(E(U_d | V, X) = E(U_d | V)\\) \\(d=0,1\\). assumption necessary identification, estimation. standard simplification helps estimation. See Carneiro, Heckman, Vytlacil (2011), Brinch, Mogstad, Wiswall (2017) Andresen (2018) comparable examples estimation MTE IVs.","code":"semiivreg(y~d|w0|w1|x, data)"},{"path":"https://cbruneelzupanc.github.io/semiIVreg/articles/semiIVreg.html","id":"estimation-procedure","dir":"Articles","previous_headings":"semi-instrumental variable (semi-IV) regression","what":"Estimation procedure","title":"semiIVreg: a package for semi-IV regression in R","text":"estimation procedure closely follows counterpart estimation MTE standard IVs, see e.g., Andresen (2018). command estimates marginal treatment responses marginal treatment effects, .e., \\[ \\begin{aligned} MTR_d(u, w_d, x) &= E(Y_d | X=x, W_d=w_d, U_D=u), \\\\ MTE(u, x, w_0, w_1) &= E(Y_1 - Y_0 | X = x, W_0=w_0, W_1=w_1, U_D=u) \\\\ &= MTR_1(u, w_1, x) - MTR_0(u, w_0, x), \\end{aligned} \\] \\(U_D = F_V(V) \\sim \\mathcal{U}(0, 1)\\) normalized unobserved resistance treatment. estimation proceeds two stages.","code":""},{"path":"https://cbruneelzupanc.github.io/semiIVreg/articles/semiIVreg.html","id":"first-stage-propensity-score","dir":"Articles","previous_headings":"semi-instrumental variable (semi-IV) regression > Estimation procedure","what":"1. First stage: propensity score","title":"semiIVreg: a package for semi-IV regression in R","text":"Estimate propensity score \\(\\widehat{P}\\) treatment selection equation (3). default, function \\(g(\\cdot)\\) given simple linear specification , code allows specifying first stage. example: default, estimation assumes probit model first stage (.e., assumes \\(V\\) normally distributed). However, can specify models (e.g., logit) using firststage_model argument. theory, specification first stage added, even possible estimate propensity score outside semiivreg command (feature implemented yet).","code":"semiivreg(y~d|w0+x|w1+x, data,             propensity_formula = d~w0+w1+w0:w1+w0:x+w1:x+I(w0^2)+I(w1^2))"},{"path":"https://cbruneelzupanc.github.io/semiIVreg/articles/semiIVreg.html","id":"second-stage-marginal-treatment-responses","dir":"Articles","previous_headings":"semi-instrumental variable (semi-IV) regression > Estimation procedure","what":"2. Second stage: marginal treatment responses","title":"semiIVreg: a package for semi-IV regression in R","text":"Estimate control function \\(\\kappa_d(P)\\) potential outcomes \\(Y_d\\) given propensity score \\(P\\) covariates \\(X\\). control function estimated flexible polynomial transformation propensity score. estimation done stacked regression potential outcomes specification (1)-(2): \\[ \\begin{aligned} E[Y|W_0, W_1, X, \\widehat{P}] = &D \\times ( \\delta_{1} + W_1 \\beta_1 + X \\beta^X_{1} + \\kappa_1(\\widehat{P}) ) + \\\\ &(1-D) \\times ( \\delta_{0} + W_0 \\beta_0 + X \\beta^X_{0} + \\kappa_0(\\widehat{P})). \\end{aligned} \\] control functions sample estimates (using estimate \\(\\widehat{P}\\)) theoretical counterparts: \\[ \\begin{aligned} \\kappa_1(P) &= E[ U_1 | D=1, W_1, W_0, X,P] = E[U_1|D=1, P] = E[U_1 | U_D \\leq P] \\\\ \\kappa_0(P) &= E[ U_0 | D=0, W_1, W_0, X,P] = E[U_0|D=0, P] = E[U_0 | U_D > P] \\end{aligned} \\] default, estimate flexible polynomials degree pol_degree_transform \\(\\kappa_0(P)\\) \\(\\kappa_1(P)\\). semi-IVs covariates, note \\(W_0\\) \\(W_1\\) can flexible transformations (polynomial, splines) specific variables, outcome equations quite flexible (also specify interactions \\(W_d\\) \\(X\\)). second stage equation estimated, don’t need estimate parameters, just take proper derivatives estimated functional form. : \\[ \\begin{aligned} \\widehat{k}_1(u) &= E[ U_1 | U_D=u] = \\widehat{\\kappa}_1(u) + u \\widehat{\\kappa}_1'(u) \\\\ \\widehat{k}_0(u) &= E[ U_0 | U_D=u] = \\widehat{\\kappa}_0(u) - (1-u) \\widehat{\\kappa}_0'(u) \\end{aligned} \\] derivatives easy compute \\(\\kappa\\) polynomial function. , Marginal Treatment Responses given : \\[ \\begin{aligned} \\widehat{MTR}_d(u, w_d, x) &= E(Y_d | X=x, W_d=w_d, U_D=u) = \\widehat{\\delta}_{d} + w_d \\widehat{\\beta}_d + x \\widehat{\\beta}^X_{d} + \\widehat{k}_d(u) \\end{aligned} \\] Marginal Treatment Effects : \\[ \\begin{aligned} \\widehat{MTE}(u, x, w_0, w_1) = \\widehat{MTR}_1(u, w_1, x) - \\widehat{MTR}_0(u, w_0, x) \\end{aligned} \\]","code":""},{"path":"https://cbruneelzupanc.github.io/semiIVreg/articles/semiIVreg.html","id":"special-case-with-homogenous-treatment-effects","dir":"Articles","previous_headings":"semi-instrumental variable (semi-IV) regression","what":"Special Case with Homogenous Treatment Effects","title":"semiIVreg: a package for semi-IV regression in R","text":"homogenous treatment effects estimates correspond potential outcome model (1)-(2), \\(U_0 = U_1 = U\\). leads known restrictions control functions \\(\\kappa_0(P)\\) \\(\\kappa_1(P)\\) impose stacked second stage regression. Indeed, \\[ E(U) = 0 = E(U | U_D \\leq P) P + E(U | U_D > P) (1-P) \\] , \\(\\kappa_0(P) = -\\kappa_1(P) \\frac{P}{1-P}\\), one can check yields \\(k_0(u) = k_1(u) = k(u)\\). Thus, MTE constant (\\(k_1(u) - k_0(u) = 0\\), cancels ), equal : \\[ \\widehat{MTE}(x, w_0, w_1) = \\widehat{\\delta}_{1} - \\widehat{\\delta}_{0} + w_1 \\widehat{\\beta}_1 - w_0 \\widehat{\\beta}_0 + x (\\widehat{\\beta}^X_{1} - \\widehat{\\beta}^X_{0}). \\] MTR still varies \\(u\\) \\(k(u)\\) constant, also estimate .","code":""},{"path":"https://cbruneelzupanc.github.io/semiIVreg/articles/semiIVreg.html","id":"caution-about-the-estimated-standard-errors","dir":"Articles","previous_headings":"semi-instrumental variable (semi-IV) regression","what":"Caution about the Estimated Standard Errors","title":"semiIVreg: a package for semi-IV regression in R","text":"default, return analytic standard errors accounting fact propensity score estimated semiivreg. Use semiivreg_boot obtain ‘correct’ bootstrapped confidence intervals.","code":""},{"path":"https://cbruneelzupanc.github.io/semiIVreg/articles/semiIVreg.html","id":"illustration-with-simulated-roy-model","dir":"Articles","previous_headings":"","what":"Illustration with simulated Roy model","title":"semiIVreg: a package for semi-IV regression in R","text":"illustrates semiivreg()command reports semi-IV regression. default, reports common support plot propensity score estimated marginal treatment effects (MTE).  One can also easily extract plot marginal treatment responses (MTR):","code":"library(semiIVreg) data(roydata) # load the data from a simulated Roy model  # semi-IV regression semiiv = semiivreg(y~d|w0|w1, data=roydata) semiiv$plot$mtr"},{"path":[]},{"path":"https://cbruneelzupanc.github.io/semiIVreg/articles/semiIVreg_heterogenousTE.html","id":"simulating-data","dir":"Articles","previous_headings":"","what":"Simulating data","title":"Estimator Performance: general heterogenous treatment effect model","text":"simulate generalized Roy models using simul_data()function. See documentation function details model. Depending chosen parameters, can simulate model homogenous/heterogenous treatment effects, well valid IVs eventually. ’s . every simulation include covariates (set effect 0), can easily included.","code":""},{"path":[]},{"path":"https://cbruneelzupanc.github.io/semiIVreg/articles/semiIVreg_heterogenousTE.html","id":"simulate-data","dir":"Articles","previous_headings":"Model with Heterogenous Treatment Effects","what":"Simulate data","title":"Estimator Performance: general heterogenous treatment effect model","text":"Let us simulate generalized Roy model heterogenous treatment effects using simul_data() function.","code":"# Model library(semiIVreg) N = 50000; set.seed(1234) # Specification model_type = \"heterogenous\" param_error = c(1, 1, 0.6, 0.5) # var_u0, var_u1, cov_u0u1, var_cost (the mean cost = constant in D*) # if heterogenous param_Z = c(0, 0, 0, 0, 1.5, 1.5, 0.9) # meanW0 state0, meanW1 state0, meanW0 state1, meanW1 state1, varW0, varW1, covW0W1 param_p = c(0, -0.7, 0.7, 0, 0, 0) # constant, alphaW0, alphaW1, alphaW0W1, effect of state, effect of parent educ param_y0 = c(3.2, 0.8, 0, 0) # intercept, effect of Wd, effect of state, effect of parent educ; param_y1 = c(3.2+0.4, 0.5, 0, 0) # the +0.2 = Average treatment effect; effect of W1, effect of state, effect of parent educ; param_genX = c(0.4, 0, 2)  data = simul_data(N, model_type, param_y0, param_y1, param_p, param_Z, param_genX, param_error)"},{"path":"https://cbruneelzupanc.github.io/semiIVreg/articles/semiIVreg_heterogenousTE.html","id":"semi-iv-regression","dir":"Articles","previous_headings":"Model with Heterogenous Treatment Effects","what":"semi-IV regression","title":"Estimator Performance: general heterogenous treatment effect model","text":"Let us apply directly semiivreg()function. Compute MTE MTR reference individuals average value semi-IVs, .e., \\((W_0, W_1) = (0, 0)\\) . Remark: \\(MTE(u, w_0, w_1, x)\\) depend \\(X\\) \\(W_0, W_1\\), always need pick reference individual. default, semiivreg computes average individuals (continuous covariates semi-IVs), takes ‘reference level’ factor variables.  Let us report also marginal treatment responses (MTR):  Trimming Support: seems relatively well estimated, except tails common support entirely satisfied, MTE identified common support. one wants restrict estimation given common support, ’s easy semiivreg().","code":"semiiv = semiivreg(y~d|w0|w1, data, ref_indiv = data.frame(w0=0, w1=0)) semiiv$plot$mtr semiiv1 = semiivreg(y~d|w0|w1, data,                      ref_indiv = data.frame(w0=0, w1=0),                      common_supp_trim = c(0.1, 0.90),                     plotting=FALSE) mte_plot = semiiv1$plot$mte; mtr_plot = semiiv1$plot$mtr; grid.arrange(mtr_plot, mte_plot, ncol=2)"},{"path":"https://cbruneelzupanc.github.io/semiIVreg/articles/semiIVreg_heterogenousTE.html","id":"comparison-with-the-truth","dir":"Articles","previous_headings":"Model with Heterogenous Treatment Effects","what":"Comparison with the truth","title":"Estimator Performance: general heterogenous treatment effect model","text":"Let us compute ‘true’ underlying MTE (estimate using true unobserved \\(Y_1\\) \\(Y_0\\) , better used known closed form solution instead, margin ’s ).   Overall, see common support, MTE precisely estimated . requires observation estimation homogenous treatment effects. otherwise, MTE well estimated tails common support. solution just trim estimation set parameters well identified .","code":"# True MTE and MTR estimations  seq_p = seq(0, 1, by=0.001); data$diff = data$y1 - data$y0; pol_degree=5 true_model_mte = lm(diff~w1 + w0 + poly(Ud, pol_degree, raw=TRUE), data); # MTE true_model_mtr1 = lm(y1 ~w1+poly(Ud, pol_degree, raw=TRUE), data) # MTR1 true_model_mtr0 = lm(y0 ~w0+poly(Ud, pol_degree, raw=TRUE), data) # MTR0  # Compute the values for a given reference individual newdata = data.frame(Ud=seq_p, w0=0, w1=0) newdata$true_mte = predict(true_model_mte, newdata);  newdata$true_mtr1 = predict(true_model_mtr1, newdata); newdata$true_mtr0 = predict(true_model_mtr0, newdata)   mte_plot + geom_line(data=newdata, aes(x=Ud, y=true_mte), linetype=\"dashed\", col=\"red\") mtr_plot + geom_line(data=newdata, aes(x=Ud, y=true_mtr1), linetype=\"dashed\", col=\"blue\") +   geom_line(data=newdata, aes(x=Ud, y=true_mtr0), linetype=\"dashed\", col=\"orange\")"},{"path":[]},{"path":"https://cbruneelzupanc.github.io/semiIVreg/articles/semiIVreg_homogenousTE.html","id":"simulating-data","dir":"Articles","previous_headings":"","what":"Simulating data","title":"Estimator Performance: homogenous treatment effect model","text":"simulate generalized Roy models using simul_data()function. See documentation function details model. Depending chosen parameters, can simulate model homogenous/heterogenous treatment effects, well valid IVs eventually. ’s . every simulation include covariates (set effect 0), can easily included.","code":""},{"path":[]},{"path":"https://cbruneelzupanc.github.io/semiIVreg/articles/semiIVreg_homogenousTE.html","id":"simulate-data","dir":"Articles","previous_headings":"Model with homogenous treatment effects","what":"Simulate data","title":"Estimator Performance: homogenous treatment effect model","text":"model homogenous Treatment Effects (conditional \\(W_0, W_1\\)).","code":"# Model 1 library(semiIVreg) N = 10000; set.seed(1234) model_type = \"homogenous\" param_error = c(1, 1.5, -0.6) # var_u, var_v, cov_uv # if homogenous param_Z = c(0, 0, 0, 0, 1.5, 1.5, 0.9) # meanW0 state0, meanW1 state0, meanW0 state1, meanW1 state1, varW0, varW1, covW0W1 param_p = c(0, -0.5, 0.5, 0, 0, 0) # constant, alphaW0, alphaW1, alphaW0W1, effect of state, effect of parent educ param_y0 = c(3.2, 0.8, 0, 0) # intercept, effect of Wd, effect of state, effect of parent educ; param_y1 = c(3.2+0.4, 0.5, 0, 0) # the +0.2 = Average treatment effect; effect of W1, effect of state, effect of parent educ; param_genX = c(0.4, 0, 2) # probability state=1 (instead of 0), mean_parenteduc, sd_parenteduc (parenteduc drawn as continuous)  data = simul_data(N, model_type, param_y0, param_y1, param_p, param_Z, param_genX, param_error)"},{"path":"https://cbruneelzupanc.github.io/semiIVreg/articles/semiIVreg_homogenousTE.html","id":"true-unobserved-homogenous-treatment-effects","dir":"Articles","previous_headings":"Model with homogenous treatment effects","what":"True unobserved homogenous Treatment Effects","title":"Estimator Performance: homogenous treatment effect model","text":", \\((W_0, W_1) = (0, 0)\\), effect always 0.4 (see parameters). see , let us just use true unobserved potential outcomes (observed thanks simulation). true model like recover. Note perfect fit exactly error term potential outcomes, \\(U_0 = U_1 = U\\). additional error term uncorrelated rest, estimate coefficients (noise).","code":"data$true_TE = data$y1 - data$y0 summary(lm(true_TE ~ w0 + w1, data)) #> Warning in summary.lm(lm(true_TE ~ w0 + w1, data)): essentially perfect fit: #> summary may be unreliable #>  #> Call: #> lm(formula = true_TE ~ w0 + w1, data = data) #>  #> Residuals: #>        Min         1Q     Median         3Q        Max  #> -1.324e-14 -2.111e-16  3.000e-19  2.120e-16  1.050e-14  #>  #> Coefficients: #>               Estimate Std. Error    t value Pr(>|t|)     #> (Intercept)  4.000e-01  3.859e-18  1.037e+17   <2e-16 *** #> w0          -8.000e-01  3.920e-18 -2.041e+17   <2e-16 *** #> w1           5.000e-01  3.939e-18  1.269e+17   <2e-16 *** #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #> Residual standard error: 3.859e-16 on 9997 degrees of freedom #> Multiple R-squared:      1,  Adjusted R-squared:      1  #> F-statistic: 2.084e+34 on 2 and 9997 DF,  p-value: < 2.2e-16 true_param = c(param_y0[1], param_y1[1] - param_y0[1], param_y0[2], param_y1[2]); true_param #> [1] 3.2 0.4 0.8 0.5 # constant y0, constant y1 - constant y0, effects of w0 on y0, effects of w1 on y1."},{"path":"https://cbruneelzupanc.github.io/semiIVreg/articles/semiIVreg_homogenousTE.html","id":"naive-ols","dir":"Articles","previous_headings":"Model with homogenous treatment effects","what":"Naive OLS","title":"Estimator Performance: homogenous treatment effect model","text":"Obviously, naive OLS estimator biased, endogeneity: \\(U\\) correlated \\(D\\) \\(Y\\). overestimates effect treatment \\(D\\) 1. individuals high \\(U\\) select themself \\(D=1\\) higher \\(Y\\). Indeed \\(E(U | D=1) > E(U | D=0)\\), \\(U\\) negatively correlated \\(V\\) (cf covariance parameter param_error), higher \\(U\\), lower \\(V\\), lower \\(V\\), likely one select \\(D=1\\).","code":"naive_ols = lm(y ~ d + w0 + w1, data); summary(naive_ols) #>  #> Call: #> lm(formula = y ~ d + w0 + w1, data = data) #>  #> Residuals: #>     Min      1Q  Median      3Q     Max  #> -4.0776 -0.6767  0.0018  0.6924  3.9086  #>  #> Coefficients: #>             Estimate Std. Error t value Pr(>|t|)     #> (Intercept)  2.70023    0.01464  184.47   <2e-16 *** #> d            1.17707    0.02126   55.37   <2e-16 *** #> w0           0.28488    0.01068   26.66   <2e-16 *** #> w1           0.36167    0.01075   33.66   <2e-16 *** #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #> Residual standard error: 1.008 on 9996 degrees of freedom #> Multiple R-squared:   0.45,  Adjusted R-squared:  0.4498  #> F-statistic:  2726 on 3 and 9996 DF,  p-value: < 2.2e-16 mean(data$U1[which(data$d == 1)]); mean(data$U0[which(data$d==0)]) #> [1] 0.3521838 #> [1] -0.3516911"},{"path":"https://cbruneelzupanc.github.io/semiIVreg/articles/semiIVreg_homogenousTE.html","id":"wrongly-assuming-that-the-semi-ivs-are-valid-ivs","dir":"Articles","previous_headings":"Model with homogenous treatment effects","what":"Wrongly assuming that the semi-IVs are valid IVs","title":"Estimator Performance: homogenous treatment effect model","text":"assume \\(W_0\\) \\(W_1\\) valid IVs (.e., direct effect respective potential outcomes)? estimated coefficients also completely biased , assumes semi-IVs effect outcomes .","code":"library(ivreg) # remark: ivreg is not required otherwise in semiivreg, only in this vignette.  valid_iv = ivreg(y ~ d | w0 + w1 + w0:w1, data=data); summary(valid_iv) #>  #> Call: #> ivreg(formula = y ~ d | w0 + w1 + w0:w1, data = data) #>  #> Residuals: #>      Min       1Q   Median       3Q      Max  #> -5.42133 -0.82741  0.01821  0.83379  4.51746  #>  #> Coefficients: #>             Estimate Std. Error t value Pr(>|t|)     #> (Intercept)  2.85027    0.04109   69.37   <2e-16 *** #> d            0.88099    0.07832   11.25   <2e-16 *** #>  #> Diagnostic tests: #>                   df1  df2 statistic  p-value     #> Weak instruments    3 9996    371.29  < 2e-16 *** #> Wu-Hausman          1 9997     12.88 0.000333 *** #> Sargan              2   NA   3268.63  < 2e-16 *** #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #> Residual standard error: 1.24 on 9998 degrees of freedom #> Multiple R-Squared: 0.1681,  Adjusted R-squared: 0.1681  #> Wald test: 126.5 on 1 and 9998 DF,  p-value: < 2.2e-16"},{"path":"https://cbruneelzupanc.github.io/semiIVreg/articles/semiIVreg_homogenousTE.html","id":"semi-iv-estimation-with-semiivreg","dir":"Articles","previous_headings":"Model with homogenous treatment effects","what":"semi-IV estimation with semiivreg","title":"Estimator Performance: homogenous treatment effect model","text":"Let us now see semi-IV estimator performs. estimated coefficients close truth, relatively small standard errors , even though sample size modest (10000 observations). cautious though: standard errors computed without taking account fact propensity score estimated first stage. can correct estimation semiivreg_boot(). typically, first stage well estimated, bias standard errors small, visible .","code":"semiiv = semiivreg(y~d|w0|w1, data, plotting=FALSE) semiiv_homogenous = semiiv$estimate$est_homogenous # extract the coefficients from the homogenous TE specification summary_coeff = summary(semiiv_homogenous) summary_coeff$coefficients[1:4,] # only print the first 4 coefficients, the other correspond to the control function of P #>              Estimate Std. Error   t value          Pr(>|t|) #> (Intercept) 3.2058476 0.03396914 94.375286 0.000000000000000 #> I(d)        0.3890825 0.06534782  5.954025 0.000000002704391 #> I(1 - d):w0 0.8029398 0.01193786 67.259916 0.000000000000000 #> I(d):w1     0.4972506 0.01178864 42.180500 0.000000000000000 true_param #> [1] 3.2 0.4 0.8 0.5 semiivboot = semiivreg_boot(y~d|w0|w1, data, Nboot=500, plotting=FALSE) # reduce the number of bootstrap simulation for speed;   boot_se = sqrt(diag(semiivboot$estimate$vcov_homogenous))[1:4] res = as.data.frame(cbind(summary_coeff$coefficients[1:4,1:2], boot_se)); colnames(res) = c(\"Estimate\", \"wrong analytic SE\", \"Bootstrapped SE\") res #>              Estimate wrong analytic SE Bootstrapped SE #> (Intercept) 3.2058476        0.03396914      0.03717139 #> I(d)        0.3890825        0.06534782      0.07168443 #> I(1 - d):w0 0.8029398        0.01193786      0.01322776 #> I(d):w1     0.4972506        0.01178864      0.01260633"},{"path":"https://cbruneelzupanc.github.io/semiIVreg/articles/semiIVreg_homogenousTE.html","id":"alternative-semi-iv-strategy-based-on-iv-quantile-regression","dir":"Articles","previous_headings":"Model with homogenous treatment effects","what":"Alternative semi-IV strategy: based on IV-quantile regression","title":"Estimator Performance: homogenous treatment effect model","text":"described Bruneel-Zupanc (2024), another general nonparametric identification strategy semi-IV, building IV-quantile regression (IVQR) framework Chernozhukov Hansen (2005). model homogenous treatment effect, strategy requires interaction \\(W_0 \\times W_1\\) relevant selection treatment. intuition interaction now serves IV treatment \\(D\\) within framework. nice feature strategy can implemented standard IV estimation, e.g., ivreg() R. baseline model, interaction significant first stage, problem weak IVs. case baseline model, estimation blow IV irrelevant. However, specify alternative model interaction indeed relevant, also estimate correctly homogenous treatment effect using strategy. now. model param_p[4] gives effect \\(W_0\\times W_1\\) \\(D\\). different 0 . IVQR strategy work. Indeed, estimates coefficients well. Notice semiivreg() function also works : Thus semiivreg()flexible used case. Notice , general IVQR estimation also higher variance estimate builds interaction IV requires large significant effects treatment avoid weak IV concerns. semiivreg() relies fact semi-IV relevant , relatively easier satisfy. Especially semi-IVs strong impact respective potential outcome, relevant soon selection treatment based gains (.e., \\(Y_1 - Y_0\\)).","code":"semiivqr = ivreg(y~d+I(1-d):w0 + I(d):w1|w0+w1+w0:w1, data=data) summary(semiivqr) #> Warning in printHypothesis(L, rhs, names(b)): one or more coefficients in the hypothesis include #>      arithmetic operators in their names; #>   the printed representation of the hypothesis will be omitted #>  #> Call: #> ivreg(formula = y ~ d + I(1 - d):w0 + I(d):w1 | w0 + w1 + w0:w1,  #>     data = data) #>  #> Residuals: #>       Min        1Q    Median        3Q       Max  #> -3.315219 -0.647210 -0.002237  0.644122  3.580389  #>  #> Coefficients: #>             Estimate Std. Error t value Pr(>|t|)     #> (Intercept)   2.9539     0.8646   3.417 0.000637 *** #> d             0.8944     1.7323   0.516 0.605655     #> I(1 - d):w0   0.6523     0.5202   1.254 0.209907     #> I(d):w1       0.6460     0.4998   1.293 0.196159     #>  #> Diagnostic tests: #>                                 df1  df2 statistic p-value     #> Weak instruments (d)              3 9996    371.29  <2e-16 *** #> Weak instruments (I(1 - d):w0)    3 9996   3228.13  <2e-16 *** #> Weak instruments (I(d):w1)        3 9996   3503.39  <2e-16 *** #> Wu-Hausman                        3 9993     46.22  <2e-16 *** #> Sargan                            0   NA        NA      NA     #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #> Residual standard error: 0.9535 on 9996 degrees of freedom #> Multiple R-Squared: 0.5082,  Adjusted R-squared: 0.5081  #> Wald test:  1914 on 3 and 9996 DF,  p-value: < 2.2e-16 # Model 2 N = 10000; set.seed(1234) model_type = \"homogenous\" param_error = c(1, 1.5, -0.6) # var_u, var_v, cov_uv # if homogenous param_Z = c(0, 0, 0, 0, 1.5, 1.5, 0.9) # meanW0 state0, meanW1 state0, meanW0 state1, meanW1 state1, varW0, varW1, covW0W1 param_p = c(0, -0.3, 0.4, 0.3, 0, 0) # constant, alphaW0, alphaW1, alphaW0W1, effect of state, effect of parent educ param_y0 = c(3.2, 0.8, 0, 0) # intercept, effect of Wd, effect of state, effect of parent educ; param_y1 = c(3.2+0.4, 0.5, 0, 0) # the +0.2 = Average treatment effect; effect of W1, effect of state, effect of parent educ; param_genX = c(0.4, 0, 2) # probability state=1 (instead of 0), mean_parenteduc, sd_parenteduc (parenteduc drawn as continuous)  data2 = simul_data(N, model_type, param_y0, param_y1, param_p, param_Z, param_genX, param_error) semiivqr2 = ivreg(y~d+I(1-d):w0 + I(d):w1|w0+w1+w0:w1, data=data2); summary(semiivqr2) #> Warning in printHypothesis(L, rhs, names(b)): one or more coefficients in the hypothesis include #>      arithmetic operators in their names; #>   the printed representation of the hypothesis will be omitted #>  #> Call: #> ivreg(formula = y ~ d + I(1 - d):w0 + I(d):w1 | w0 + w1 + w0:w1,  #>     data = data2) #>  #> Residuals: #>       Min        1Q    Median        3Q       Max  #> -3.611960 -0.676872 -0.003606  0.669898  3.886447  #>  #> Coefficients: #>             Estimate Std. Error t value  Pr(>|t|)     #> (Intercept)  3.21013    0.03615  88.811   < 2e-16 *** #> d            0.37626    0.08777   4.287 0.0000183 *** #> I(1 - d):w0  0.80317    0.01516  52.976   < 2e-16 *** #> I(d):w1      0.49653    0.04179  11.882   < 2e-16 *** #>  #> Diagnostic tests: #>                                 df1  df2 statistic p-value     #> Weak instruments (d)              3 9996    405.38  <2e-16 *** #> Weak instruments (I(1 - d):w0)    3 9996   8024.23  <2e-16 *** #> Weak instruments (I(d):w1)        3 9996   1676.42  <2e-16 *** #> Wu-Hausman                        3 9993     50.75  <2e-16 *** #> Sargan                            0   NA        NA      NA     #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #> Residual standard error: 1.005 on 9996 degrees of freedom #> Multiple R-Squared: 0.4829,  Adjusted R-squared: 0.4828  #> Wald test:  2101 on 3 and 9996 DF,  p-value: < 2.2e-16 semiiv2 = semiivreg(y~d|w0|w1, data=data2, plotting=FALSE) semiiv2_homogenous = semiiv2$estimate$est_homogenous # extract the coefficients from the homogenous TE specification summary_coeff2 = summary(semiiv2_homogenous) summary_coeff2$coefficients[1:4,] # only print the first 4 coefficients, the other correspond to the control function of P #>              Estimate  Std. Error   t value      Pr(>|t|) #> (Intercept) 3.2053784 0.040632729 78.886614  0.000000e+00 #> I(d)        0.3868430 0.095396241  4.055117  5.048965e-05 #> I(1 - d):w0 0.8048831 0.009214952 87.345333  0.000000e+00 #> I(d):w1     0.5004888 0.018689574 26.779040 1.270063e-152 true_param #> [1] 3.2 0.4 0.8 0.5"},{"path":[]},{"path":"https://cbruneelzupanc.github.io/semiIVreg/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Christophe Bruneel. Author, maintainer.            https://cbruneel.com","code":""},{"path":"https://cbruneelzupanc.github.io/semiIVreg/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Bruneel C (2024). semiIVreg: Semi-Instrumental Variable (semi-IV) Regression. R package version 1.0.0, https://cbruneelzupanc.github.io/semiIVreg/, https://www.cbruneel.com/.","code":"@Manual{,   title = {semiIVreg: Semi-Instrumental Variable (semi-IV) Regression},   author = {Christophe Bruneel},   year = {2024},   note = {R package version 1.0.0, https://cbruneelzupanc.github.io/semiIVreg/},   url = {https://www.cbruneel.com/}, }"},{"path":"https://cbruneelzupanc.github.io/semiIVreg/index.html","id":"semiivreg-a-package-for-semi-iv-regression-in-r","dir":"","previous_headings":"","what":"Semi-Instrumental Variable (semi-IV) Regression","title":"Semi-Instrumental Variable (semi-IV) Regression","text":"package provides implementation semi-IV regressions described Bruneel-Zupanc (2024).","code":""},{"path":"https://cbruneelzupanc.github.io/semiIVreg/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Semi-Instrumental Variable (semi-IV) Regression","text":"can find development version semiIVreg GitHub. can download install directly local source computer: Alternatively, can directly download GitHub repository:","code":"# If the package is in a .tar.gz file install.packages(\"/path/to/your/package.tar.gz\", repos = NULL, type = \"source\")  # If the package is in a directory install.packages(\"/path/to/your/package_directory\", repos = NULL, type = \"source\") # install.packages(\"devtools\") devtools::install_github(\"cbruneelzupanc/semiIVreg\")"},{"path":"https://cbruneelzupanc.github.io/semiIVreg/index.html","id":"semi-iv-regression","dir":"","previous_headings":"","what":"Semi-IV Regression","title":"Semi-Instrumental Variable (semi-IV) Regression","text":"illustrates semiivreg()command reports semi-IV regression. default, reports common support plot propensity score estimated marginal treatment effects (MTE).  One can also easily extract plot marginal treatment responses (MTR):  details, see detailed documentation function detailed vignettes.","code":"library(semiIVreg) data(roydata) # load the data from a simulated Roy model  # semi-IV regression semiiv = semiivreg(y~d|w0|w1, data=roydata) semiiv$plot$mtr"},{"path":"https://cbruneelzupanc.github.io/semiIVreg/reference/Kappa_fun.html","id":null,"dir":"Reference","previous_headings":"","what":"Control functions transformations for selection probabilities — Kappa_fun","title":"Control functions transformations for selection probabilities — Kappa_fun","text":"functions provides pre-specified transformations control flexibly selection probabilities regression.  correspond \\(\\kappa_d(p)\\) corresponding \\(k_d(u)\\) Bruneel-Zupanc (2024).  Special functions used homogenous treatment effect specifications code different. July 2024: now, polynomial transformations encoded.","code":""},{"path":"https://cbruneelzupanc.github.io/semiIVreg/reference/Kappa_fun.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Control functions transformations for selection probabilities — Kappa_fun","text":"","code":"Kappa_fun(p, pol_degree = 5)  kdu_transform_fun(u, d, pol_degree = 5)  Kappa_homogenous_fun(p, pol_degree = 5)  ku_transform_homogenous_fun(u, pol_degree = 5)"},{"path":"https://cbruneelzupanc.github.io/semiIVreg/reference/Kappa_fun.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Control functions transformations for selection probabilities — Kappa_fun","text":"p Vector propensity scores transform flexible function. pol_degree Degree polynomial transformation. d potential outcome consider (needed \\(k_d(u)\\) heterogenous treatment effects).","code":""},{"path":"https://cbruneelzupanc.github.io/semiIVreg/reference/Kappa_fun.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Control functions transformations for selection probabilities — Kappa_fun","text":"See Andresen (2018) Bruneel-Zupanc (2024) computation details linking \\(\\kappa_d(p)\\) corresponding corresponding \\(k_d(u)\\).  \\(\\kappa_1(p) = E(U_1 | U_D \\leq p) \\) \\(\\kappa_0(p) = E(U_0 | U_D>p) \\) \\(k_d(u) = E(U_d | U_D=u)\\). case homogenous treatment effects: \\(k_0(u) = k_1(u)\\). provides restriction \\(\\kappa\\), hence special functions.","code":""},{"path":"https://cbruneelzupanc.github.io/semiIVreg/reference/Kappa_fun.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Control functions transformations for selection probabilities — Kappa_fun","text":"","code":"v = seq(0.1, 0.9, by=0.1) # Transformations for general Heterogenous TE functions: Kappa_fun(p=v, pol_degree=6) #>         1    2     3      4       5        6 #>  [1,] 0.1 0.01 0.001 0.0001 0.00001 0.000001 #>  [2,] 0.2 0.04 0.008 0.0016 0.00032 0.000064 #>  [3,] 0.3 0.09 0.027 0.0081 0.00243 0.000729 #>  [4,] 0.4 0.16 0.064 0.0256 0.01024 0.004096 #>  [5,] 0.5 0.25 0.125 0.0625 0.03125 0.015625 #>  [6,] 0.6 0.36 0.216 0.1296 0.07776 0.046656 #>  [7,] 0.7 0.49 0.343 0.2401 0.16807 0.117649 #>  [8,] 0.8 0.64 0.512 0.4096 0.32768 0.262144 #>  [9,] 0.9 0.81 0.729 0.6561 0.59049 0.531441 #> attr(,\"degree\") #> [1] 1 2 3 4 5 6 #> attr(,\"class\") #> [1] \"poly\"   \"matrix\" k1u = kdu_transform_fun(v, d=1, pol_degree=6)  # Transformations for Homogenous TE functions: Kappa_homogenous_fun(p=v, pol_degree=6) #>       const   1    2     3      4       5        6 #>  [1,]     1 0.1 0.01 0.001 0.0001 0.00001 0.000001 #>  [2,]     1 0.2 0.04 0.008 0.0016 0.00032 0.000064 #>  [3,]     1 0.3 0.09 0.027 0.0081 0.00243 0.000729 #>  [4,]     1 0.4 0.16 0.064 0.0256 0.01024 0.004096 #>  [5,]     1 0.5 0.25 0.125 0.0625 0.03125 0.015625 #>  [6,]     1 0.6 0.36 0.216 0.1296 0.07776 0.046656 #>  [7,]     1 0.7 0.49 0.343 0.2401 0.16807 0.117649 #>  [8,]     1 0.8 0.64 0.512 0.4096 0.32768 0.262144 #>  [9,]     1 0.9 0.81 0.729 0.6561 0.59049 0.531441 ku = ku_transform_homogenous_fun(v, pol_degree=6) # no d anymore, same for both d here;"},{"path":"https://cbruneelzupanc.github.io/semiIVreg/reference/mtr_fun.html","id":null,"dir":"Reference","previous_headings":"","what":"MTE and MTR sub-estimation functions — mtr_fun","title":"MTE and MTR sub-estimation functions — mtr_fun","text":"functions allow estimate mte mtr, confidence intervals, based coefficients estimated main model main function. details can found Bruneel-Zupanc (2024).  Different formulas must applied depending whether treatment homogenous heterogenous.","code":""},{"path":"https://cbruneelzupanc.github.io/semiIVreg/reference/mtr_fun.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"MTE and MTR sub-estimation functions — mtr_fun","text":"","code":"mtr_fun(coeff, vcov, var_treatment, var_cov_2nd, ref_indiv, seq_u,                homogenous=FALSE, pol_degree, conf_level, t_value, Xdat)"},{"path":"https://cbruneelzupanc.github.io/semiIVreg/reference/mtr_plot_fun.html","id":null,"dir":"Reference","previous_headings":"","what":"Marginal Treatment Effect (MTE) and Responses (MTR) plots — mtr_plot_fun","title":"Marginal Treatment Effect (MTE) and Responses (MTR) plots — mtr_plot_fun","text":"Plot MTR MTE estimated curves confidence intervals.","code":""},{"path":"https://cbruneelzupanc.github.io/semiIVreg/reference/mtr_plot_fun.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Marginal Treatment Effect (MTE) and Responses (MTR) plots — mtr_plot_fun","text":"","code":"mtr_plot_fun(dat_plot, common_supp)  mte_plot_fun(dat_plot, common_supp)"},{"path":"https://cbruneelzupanc.github.io/semiIVreg/reference/mtr_plot_fun.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Marginal Treatment Effect (MTE) and Responses (MTR) plots — mtr_plot_fun","text":"dat_plot Data frame estimated MTE MTR values confidence intervals. Must contain specific variables: Phat, mtr0, mtr1, mtr0_lwr, mtr1_lwr, mtr0_upr, mtr1_upr, mte, mte_lwr, mte_upr. common_supp Vector two values indicating common support plot. Default full support 0,1. colMTE, colD0, colD1 Color MTE, MTR0 MTR1 curves.","code":""},{"path":"https://cbruneelzupanc.github.io/semiIVreg/reference/mtr_plot_fun.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Marginal Treatment Effect (MTE) and Responses (MTR) plots — mtr_plot_fun","text":"Attention: default semiivreg confidence intervals computed analytically, include error first stage propensity score. corrected semiivreg_boot bootstrapping entire estimation obtain confidence intervals.","code":""},{"path":"https://cbruneelzupanc.github.io/semiIVreg/reference/roydata.html","id":null,"dir":"Reference","previous_headings":"","what":"Generalized Roy Data with Heterogenous Treatment Effects — roydata","title":"Generalized Roy Data with Heterogenous Treatment Effects — roydata","text":"data frame 100,000 observations drawn simulated Roy model heterogenous treatment effects using simul_data().","code":""},{"path":"https://cbruneelzupanc.github.io/semiIVreg/reference/roydata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generalized Roy Data with Heterogenous Treatment Effects — roydata","text":"","code":"data(roydata)"},{"path":"https://cbruneelzupanc.github.io/semiIVreg/reference/roydata.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Generalized Roy Data with Heterogenous Treatment Effects — roydata","text":"data contains following information observed standard dataset: y observed outcome. d treatment. w0, w1 semi-IVs entering D=0 D=1. Xbinary, Xcontinuous Two covariates, one binary one continuous. also reports typically unobserved potential outcomes shocks: y0, y1 unobserved potential outcomes. P unobserved true treatment probability. latent, V, Ud, U0, U1 unobserved shocks V. Ud normalized V ranks. U0 U1 outcome shocks. latent gives latent utility term selection equation. data generated using following R code:","code":"N=100000; set.seed(1234) model_type = \"heterogenous\" param_error = c(1, 1, 0.6, 0.5) param_Z = c(0, 0, 0, 0, 1.5, 1.5, 0.9) param_p = c(0, -0.7, 0.7, 0, 0, 0) param_y0 = c(3.2, 0.8, 0, 0) param_y1 = c(3.2+0.4, 0.5, 0, 0) param_genX = c(0.4, 0, 2)  roydata = simul_data(N, model_type, param_y0, param_y1,                      param_p, param_Z, param_genX, param_error)"},{"path":"https://cbruneelzupanc.github.io/semiIVreg/reference/roydata2.html","id":null,"dir":"Reference","previous_headings":"","what":"Generalized Roy Data with Homogenous Treatment Effects — roydata2","title":"Generalized Roy Data with Homogenous Treatment Effects — roydata2","text":"data frame 100,000 observations drawn simulated Roy model homogenous treatment effects using simul_data().","code":""},{"path":"https://cbruneelzupanc.github.io/semiIVreg/reference/roydata2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generalized Roy Data with Homogenous Treatment Effects — roydata2","text":"","code":"data(roydata2)"},{"path":"https://cbruneelzupanc.github.io/semiIVreg/reference/roydata2.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Generalized Roy Data with Homogenous Treatment Effects — roydata2","text":"data contains following information observed standard dataset: y observed outcome. d treatment. w0, w1 semi-IVs entering D=0 D=1. Xbinary, Xcontinuous Two covariates, one binary one continuous. also reports typically unobserved potential outcomes shocks: y0, y1 unobserved potential outcomes. P unobserved true treatment probability. latent, V, Ud, U0, U1 unobserved shocks V. Ud normalized V ranks. U0 U1 outcome shocks. latent gives latent utility term selection equation. data generated using following R code:","code":"N = 100000; set.seed(1234) model_type = \"homogenous\" param_error = c(1, 1.5, -0.6) param_Z = c(0, 0, 0, 0, 1.5, 1.5, 0.9) param_p = c(0, -0.5, 0.5, 0, 0, 0) param_y0 = c(3.2, 0.8, 0, 0) param_y1 = c(3.2+0.4, 0.5, 0, 0) param_genX = c(0.4, 0, 2)  roydata2 = simul_data(N, model_type, param_y0, param_y1,                       param_p, param_Z, param_genX, param_error)"},{"path":"https://cbruneelzupanc.github.io/semiIVreg/reference/semiivreg.html","id":null,"dir":"Reference","previous_headings":"","what":"Semi-IV Regression Function — semiivreg","title":"Semi-IV Regression Function — semiivreg","text":"Semi-IV regression function Bruneel-Zupanc (2024). Syntax inspired ivreg. Returns MTE MTR curves confidence intervals.  Also returns coefficient estimated ATE case treatment effect homogenous.  estimation almost instantaneous (seconds ). default, return analytic standard errors accounting fact propensity score estimated semiivreg. Use semiivreg_boot obtain 'correct' bootstrapped confidence intervals (takes bit longer).","code":""},{"path":"https://cbruneelzupanc.github.io/semiIVreg/reference/semiivreg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Semi-IV Regression Function — semiivreg","text":"","code":"semiivreg(formula, data, propensity_formula=NULL, ref_indiv =NULL,            firststage_model=\"probit\",            pol_degree_transform = 5, conf_level = 0.05, common_supp_trim=c(0,1),            trimming_value=NULL, automatic_trim=FALSE, plotting=TRUE)  semiivreg_boot(formula, Nboot=500, data, propensity_formula=NULL, ref_indiv =NULL,                firststage_model=\"probit\",                pol_degree_transform = 5, common_supp_trim=c(0,1), trimming_value = NULL,                automatic_trim = FALSE, plotting=TRUE, conf_level = 0.05, CI_method = \"delta\")"},{"path":"https://cbruneelzupanc.github.io/semiIVreg/reference/semiivreg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Semi-IV Regression Function — semiivreg","text":"formula Formula regression, form outcome ~ treatment | semi-iv0 | semi-iv1 | commoncovariates.  treatment variable binary (0, 1).  covariates effect differs D=1 D=0 included semi-iv0 semi-iv1. data Dataframe containing data. propensity_formula Formula 1st stage. nothing specified, just runs probit d ~ semi-iv0 + semi-iv1 + covariates (removing redundant variables). ref_indiv Specify reference individual (terms covariates) evaluate function.  default takes average value numerical covariates, reference level factors. firststage_model default, first stage probit model. Can specify another model (e.g., \"logit\"). pol_degree_transform Degree polynomial transformation control function. conf_level Confidence level confidence intervals. common_supp_trim Vector two values indicating set propensity scores evaluate function.  Default full support [0,1]. can trimmed manually. trimming_value Can either vector c(0.05, 0.95) indicating quantile propensity score keep observations D=0 D=1.  Can also single value, case symmetric trimming .  Inserting trimming_value generates automatic_trim = TRUE automatically. automatic_trim TRUE, estimation second stage done common_support . plotting TRUE wants plot end function, FALSE otherwise. Nboot Number bootstrap samples. CI_method \"delta\" delta method, \"curve\" bootstrap MTE curves directly.","code":""},{"path":"https://cbruneelzupanc.github.io/semiIVreg/reference/semiivreg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Semi-IV Regression Function — semiivreg","text":"list following elements: $data Returns data output estimation used plot MTE MTR. details: $RES Dataframe estimated MTE MTR values confidence intervals. $RES_homogenous Dataframe estimated MTE MTR values confidence intervals homogenous treatment effects. $orig_data Original data used estimation added propensity score estimated, named Phat. $ref_indiv Reference individual(s) evaluate MTE MTR. $Xdat Original covariates, just used bootstrap function. $estimate Returns estimation : $est Second stage estimate \\(E[Y_d | D, W_d, X, \\widehat{P}]\\) \\(\\widehat{P}\\) controlled flexible control function (polynomial) \\(\\kappa_d(P)\\). $propensity First stage estimate propensity score. $est_homogenous Homogenous TE Second stage estimate \\(E[Y_d | D, W_d, X, \\widehat{P}]\\)  Homogenous TE implies restriction \\(\\kappa_0(P) = -\\kappa_1(P) \\frac{P}{1-P}\\) \\(E(U)=0\\).  ensures \\(k_0(u) = k_1(u)\\), cf Bruneel-Zupanc (2024). $homogenous_TE Extract ATE estimation case homogenous treatment effects (can observed est_homogenous well). $plot Returns separately following plot objects: supp, mtr, mte, mtr_homogenous, mte_homogenous. $supp Returns common support propensity score Phat two treatment group. $call Returns call function.","code":""},{"path":"https://cbruneelzupanc.github.io/semiIVreg/reference/semiivreg.html","id":"the-estimated-model","dir":"Reference","previous_headings":"","what":"The estimated model","title":"Semi-IV Regression Function — semiivreg","text":"semiivreg estimates marginal treatment effect (MTE) marginal treatment response (MTR) following model. potential outcomes given $$ Y_0 = \\delta_{0} + W_0 \\beta_0 + X \\beta^X_{0} + U_0,      \\quad \\quad \\quad (1) $$ $$ Y_1 = \\delta_{1} + W_1 \\beta_1 + X \\beta^X_{1} + U_1,      \\quad \\quad \\quad (2) $$ selection rule $$ \\begin{aligned} D^* &= g(W_0, W_1, X) - V \\\\ &= - ( \\alpha + \\alpha_0 W_0 + \\alpha_1 W_1 + \\alpha_{X} X ) - V, \\quad \\quad \\quad (3) \\\\ \\text{ } \\quad D &= \\mathbb{}(D^* > 0), \\end{aligned} $$ semi-IVs. \\(W_0\\) (respectively \\(W_1\\)) semi-IVs excluded \\(Y_1\\) (resp. \\(Y_0\\)). \\(W_0\\) \\(W_1\\) may contain several variables. Nonparametric identification requires \\(W_d\\) contains least one excluded variable (see Bruneel-Zupanc, 2024). Covariates. \\(X\\) covariates affect potential outcomes. One can restrict effect \\(X\\) across potential outcomes (.e., \\(\\beta^X_{0} = \\beta^X_{1}\\)). , specify: semiivreg(y~d|w0|w1|x, data). general, different effect covariates across alternatives (.e., \\(\\beta^X_{0} \\neq \\beta^X_{1}\\)). specified including covariates semi-IVs: semiivreg(y~d|w0+x|w1+x, data). Unobservables. \\(U_0\\) \\(U_1\\) general unobservables (may include several shocks, may across alternatives) affecting outcomes. \\(V\\) scalar unobservable affects selection. lower \\(V\\), likely one select treatment. Nonparametric identification requires independence, .e., \\((U_0, U_1, V) \\perp (W_0, W_1) | X\\). estimation , additionally assume additive separability covariates \\(X\\), .e., \\(E(U_d | V, X) = E(U_d | V)\\) \\(d=0,1\\). assumption necessary identification, estimation. standard simplification helps estimation. See Carneiro, Heckman Vytlacil (2011), Brinch, Mogstad Wiswall (2017) Andresen (2018) comparable examples estimation MTE IVs.","code":""},{"path":"https://cbruneelzupanc.github.io/semiIVreg/reference/semiivreg.html","id":"estimation-procedure","dir":"Reference","previous_headings":"","what":"Estimation Procedure","title":"Semi-IV Regression Function — semiivreg","text":"estimation procedure follow closely counterpart estimation MTE standard IVs, see e.g., Andresen (2018). command estimates marginal treatment responses marginal treatment effects, .e., $$ \\begin{aligned} MTR_d(u, w_d, x) &= E(Y_d | X=x, W_d=w_d, U_D=u), \\\\ MTE(u, x, w_0, w_1) &= E(Y_1 - Y_0 | X = x, W_0=w_0, W_1=w_1, U_D=u) \\\\ &= MTR_1(u, w_1, x) - MTR_0(u, w_0, x), \\end{aligned} $$ \\(U_D = F_V(V) \\sim \\mathcal{U}(0, 1)\\) normalized unobserved resistance treatment. estimation proceeds two stage. First stage. Estimate propensity score \\(\\widehat{P}\\) treatment selection equation (3).  default, function \\(g(\\cdot)\\) given simple linear specification , code allows specify first stage. example: Second stage. Estimate control function \\(\\kappa_d(P)\\) potential outcomes \\(Y_d\\) given propensity score \\(P\\) covariates \\(X\\). control function estimated flexible polynomial transformation propensity score. estimation done stacked regression potential outcomes specification (1)-(2): $$ \\begin{aligned} E[Y|W_0, W_1, X, \\widehat{P}] = &D \\times ( \\delta_{1} + W_1 \\beta_1 + X \\beta^X_{1} + \\kappa_1(\\widehat{P}) ) + \\\\            &(1-D) \\times ( \\delta_{0} + W_0 \\beta_0 + X \\beta^X_{0} + \\kappa_0(\\widehat{P})). \\end{aligned}  $$ control functions sample estimate (using estimate \\(\\widehat{P}\\)) theoretical counterpart: $$\\begin{aligned}  \\kappa_1(P) &= E[ U_1 | D=1, W_1, W_0, X,P] = E[U_1|D=1, P] = E[U_1 | U_D \\leq P] \\\\  \\kappa_0(P) &= E[ U_0 | D=0, W_1, W_0, X,P] = E[U_0|D=0, P] = E[U_0 | U_D > P]  \\end{aligned}$$ default, estimate flexible polynomials degree pol_degree_transform \\(\\kappa_0(P)\\) \\(\\kappa_1(P)\\) . semi-IVs covariates, note \\(W_0\\) \\(W_1\\) can flexible transformations (polynomial, splines) specific variables, outcome equation quite flexible (also specify interactions \\(W_d\\) \\(X\\)). equation second stage estimated, need estimate parameters, just take proper derivatives estimated functional form. : $$\\begin{aligned}  \\widehat{k}_1(u) &= E[ U_1 | U_D=u] = \\widehat{\\kappa}_1(u) + u \\widehat{\\kappa}_1'(u) \\\\  \\widehat{k}_0(u) &= E[ U_0 | U_D=u] = \\widehat{\\kappa}_0(u) - (1-u) \\widehat{\\kappa}_0'(u),  \\end{aligned}$$ derivatives easy compute \\(\\kappa\\) polynomial function.  , Marginal Treatment Responses given : $$ \\begin{aligned} \\widehat{MTR}_d(u, w_d, x) &= E(Y_d | X=x, W_d=w_d, U_D=u) = \\widehat{\\delta}_{d} + w_d \\widehat{\\beta}_d + x \\widehat{\\beta}^X_{d} + \\widehat{k}_d(u), \\end{aligned} $$Marginal Treatment Effects $$ \\begin{aligned} \\widehat{MTE}(u, x, w_0, w_1) = \\widehat{MTR}_1(u, w_1, x) - \\widehat{MTR}_0(u, w_0, x). \\end{aligned} $$","code":"semiivreg(y~d|w0+x|w1+x, data,                         propensity_formula = d~w0+w1+w0:w1+w0:x+w1:x+I(w0^2)+I(w1^2))"},{"path":"https://cbruneelzupanc.github.io/semiIVreg/reference/semiivreg.html","id":"special-case-with-homogenous-treatment-effects","dir":"Reference","previous_headings":"","what":"Special case with Homogenous Treatment Effects","title":"Semi-IV Regression Function — semiivreg","text":"homogenous treatment effects estimates correspond potential outcome model (1)-(2), \\(U_0 = U_1 = U\\). leads known restrictions control functions \\(\\kappa_0(P)\\) \\(\\kappa_1(P)\\) impose stacked second stage regression. Indeed, $$ E(U) = 0 = E(U | U_D \\leq P) P + E(U | U_D > P) (1-P) $$ , \\(\\kappa_0(P) = -\\kappa_1(P) \\frac{P}{1-P}\\), one can check yields \\(k_0(u) = k_1(u) = k(u)\\). Thus, MTE constant (\\(k_1(u) - k_0(u) = 0\\), cancels ), equal : $$ \\widehat{MTE}(x, w_0, w_1) = \\widehat{\\delta}_{1} - \\widehat{\\delta}_{0} + w_1 \\widehat{\\beta}_1 - w_0 \\widehat{\\beta}_0 + x (\\widehat{\\beta}^X_{1} - \\widehat{\\beta}^X_{0}). $$ MTR still varies \\(u\\) \\(k(u)\\) constant, also estimate .","code":""},{"path":"https://cbruneelzupanc.github.io/semiIVreg/reference/semiivreg.html","id":"caution-about-the-estimated-standard-errors","dir":"Reference","previous_headings":"","what":"Caution about the Estimated Standard errors","title":"Semi-IV Regression Function — semiivreg","text":"default, return analytic standard errors accounting fact propensity score estimated semiivreg. Use semiivreg_boot obtain 'correct' bootstrapped confidence intervals.","code":""},{"path":"https://cbruneelzupanc.github.io/semiIVreg/reference/semiivreg.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Semi-IV Regression Function — semiivreg","text":"Bruneel-Zupanc, C. (2024). (fully) exclude , necessary! Identification semi-IVs. arXiv preprint arXiv:2303.12667. empirical applications estimation Marginal Treatment Effects standard IVs, see example:  Carneiro, P., Heckman, J. J., & Vytlacil, E. J. (2011). Estimating marginal returns education. American Economic Review, 101(6), 2754-2781. Brinch, C. N., Mogstad, M., & Wiswall, M. (2017). Beyond LATE discrete instrument. Journal Political Economy, 125(4), 985-1039. particular, see Andresen, M. E. (2018). Exploring marginal treatment effects: Flexible estimation using Stata. Stata Journal, 18(1), 118-158.","code":""},{"path":"https://cbruneelzupanc.github.io/semiIVreg/reference/semiivreg.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Semi-IV Regression Function — semiivreg","text":"Christophe Bruneel-Zupanc, cbruneel.com","code":""},{"path":"https://cbruneelzupanc.github.io/semiIVreg/reference/semiivreg.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Semi-IV Regression Function — semiivreg","text":"","code":"# Load data: data(roydata)  # Run the semi-IV regression semiiv = semiivreg(y~d|w0|w1, data=roydata)  semiiv = semiivreg(y~d|w0|w1|Xbinary + Xcontinuous, data=roydata) # with covariates  semiiv = semiivreg(y~d|w0+Xbinary|w1+Xbinary|Xcontinuous, data=roydata)  # Xbinary has different effect on Y0 and Y1, Xcontinuous has the same. semiiv = semiivreg(y~d|w0|w1, data=roydata, propensity_formula = d~w0+w1+w0:w1)  # if want to specify another first stage  semiiv$plot$mtr # if want to plot mtr_plot"},{"path":"https://cbruneelzupanc.github.io/semiIVreg/reference/simul_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate data from the Generalized Roy Model with semi-IVs — simul_data","title":"Simulate data from the Generalized Roy Model with semi-IVs — simul_data","text":"function simulates data Generalized Roy Model semi-IVs.  simulation specified Bruneel-Zupanc (2024).","code":""},{"path":"https://cbruneelzupanc.github.io/semiIVreg/reference/simul_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate data from the Generalized Roy Model with semi-IVs — simul_data","text":"","code":"simul_data(N, model_type=\"heterogenous\",            param_y0, param_y1, param_p, param_Z, param_genX, param_error)"},{"path":"https://cbruneelzupanc.github.io/semiIVreg/reference/simul_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate data from the Generalized Roy Model with semi-IVs — simul_data","text":"N Number observations model_type Type model: \"heterogenous\" \"homogenous\" param_y0 Parameters Y0 = \\((\\delta_0, \\beta_0, \\beta_{0X_1}, \\beta_{0X_2})\\).  .e., intercept, effects w0, \\(X_1\\), \\(X_2\\) \\(Y_0\\). param_y1 Parameters Y1: \\((\\delta_1, \\beta_1, \\beta_{1X_1}, \\beta_{1X_2})\\).  .e., intercept, effects w1, \\(X_1\\), \\(X_2\\) \\(Y_1\\). param_p Parameters selection: \\((\\alpha, \\alpha_0, \\alpha_1, \\alpha_2, \\alpha_{X_1}, \\alpha_{X_2})\\)  .e., intercept effects w0, w1, w0w1, Xbinary, Xcontinuous latent utility. param_Z Parameters simulation semi-IVs:  \\((\\mu_{W0,x_1=0}, \\mu_{W1,x_1=0}, \\mu_{W0,x_1=1}, \\mu_{W1,x_1=1}, \\sigma^2_{W0}, \\sigma^2_{W1}, \\sigma_{W0W1})\\). param_genX Parameters covariates: \\((p_{X_1}, \\mu_{X_2}, \\sigma^2_{X_2})\\). param_error Parameters error terms: depends model_type:  heterogenous: \\((\\sigma^2_{U0}, \\sigma^2_{U1}, \\sigma_{U0U1}, \\sigma^2_{\\text{cost}})\\)  homogenous: \\((\\sigma^2_{U}, \\sigma^2_{V}, \\sigma_{UV})\\)","code":""},{"path":"https://cbruneelzupanc.github.io/semiIVreg/reference/simul_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate data from the Generalized Roy Model with semi-IVs — simul_data","text":"data frame following columns: y observed outcome. d treatment. w0, w1 semi-IVs entering D=0 D=1. Xbinary, Xcontinuous Two covariates, one binary one continuous. y0, y1 unobserved potential outcomes. P unobserved true treatment probability. latent, V, Ud, U0, U1 unobserved shocks V. Ud normalized V ranks. U0 U1 outcome shocks. latent gives latent utility term selection equation.","code":""},{"path":"https://cbruneelzupanc.github.io/semiIVreg/reference/simul_data.html","id":"the-generalized-roy-model-","dir":"Reference","previous_headings":"","what":"The Generalized Roy model.","title":"Simulate data from the Generalized Roy Model with semi-IVs — simul_data","text":"function simulates generalized Roy model described Bruneel-Zupanc (2024). Potential Outcomes. potential outcomes (e.g., earnings) given : $$ Y_0 = \\delta_{0} + \\beta_{0} W_0 + X \\beta_{0X} + U_0, $$ $$ Y_1 = \\delta_{1} + \\beta_{1} W_1 + X \\beta_{1X} + U_1, $$ \\(W_0, W_1\\) observed semi-IVs excluded \\(Y_1\\) \\(Y_0\\) respectively, \\(X=(X_1, X_2)\\) vector binary (\\(X_1\\), e.g., location) continuous (\\(X_2\\), e.g., education parents) observable covariates, \\(U_0, U_1\\) unobservable errors. Selection problem. observe outcome $$ Y = (1-D) Y_0 + D Y_1. $$ \\(D\\) represents (binary) treatment decision (e.g., education choice), given following selection rule: $$ \\begin{aligned} D^* &= g(W_0, W_1, X) - V \\\\ &= - ( \\alpha + \\alpha_0 W_0 + \\alpha_1 W_1 + \\alpha_2 W_0 \\times W_1 + \\alpha_{X_1} X_1 + \\alpha_{X_2} X_2) - V, \\\\ \\text{ } \\quad D &= \\mathbb{}(D^* > 0), \\end{aligned} $$ \\(V\\) main unobservable probability shock, higher \\(V\\), likely one treated. Note normalize \\(U_D=F_{V}(V)\\) get normalized probability shock \\(U_D \\sim \\mathcal{U}(0, 1)\\). \\(U_D\\) can interpreted unobserved resistance treatment, closer \\(U_D\\) 0, likely individual treated. specification yields probability treatment given : $$ \\textrm{Pr}(D=1 | W_0, W_1, X) = \\textrm{Pr}(V < g(W_0, W_1, X)). $$ Thus, ceteris paribus, lower \\(g\\), higher probability treatment. Unobservables specification. specification unobservable depends model type. general heterogenous treatment effect model, : #' $$ \\begin{pmatrix} U_0 \\\\ U_1 \\end{pmatrix} \\sim \\mathcal{N}\\left( \\begin{pmatrix} 0 \\\\ 0 \\end{pmatrix}, \\begin{pmatrix} \\sigma^2_{U0} & \\sigma_{U0U1} \\\\ \\sigma_{U0U1} & \\sigma^2_{U1} \\end{pmatrix} \\right), $$ $$ C \\sim \\mathcal{N}(\\mu_{\\text{cost}}, \\sigma^2_{\\text{cost}}), $$ $$ V = -(U_1 - U_0 - C). $$ homogeneous treatment effect model: $$ \\begin{pmatrix} U \\\\ V \\end{pmatrix} \\sim \\mathcal{N}\\left( \\begin{pmatrix} 0 \\\\ \\mu_{V} \\end{pmatrix}, \\begin{pmatrix} \\sigma^2_{U} & \\sigma_{UV} \\\\ \\sigma_{UV} & \\sigma^2_{V} \\end{pmatrix} \\right), $$ $$ U_0 = U_1 = U. $$ cases, \\(V\\) normally distributed, selection equation probit model. Covariates semi-IVs specification. covariates generated $$ X_1 \\sim \\text{Bernoulli}(p_{X_1}) \\text{ } X_1 \\sim \\mathcal{N}(\\mu_{X_2}, \\sigma^2_{X_2}). $$ semi-IVs \\(X_1\\)-specific given : $$ \\begin{pmatrix} W_0 \\\\ W_1 \\end{pmatrix} \\sim \\mathcal{N}\\left( \\begin{pmatrix} \\mu_{W0,x_1} \\\\ \\mu_{W1,x_1} \\end{pmatrix}, \\begin{pmatrix} \\sigma^2_{W0} & \\sigma_{W0W1} \\\\ \\sigma_{W0W1} & \\sigma^2_{W1} \\end{pmatrix} \\right), $$ means \\(\\mu_{W0,x_1}\\) \\(\\mu_{W1,x_1}\\) depend binary covariate \\(X_1=x_1\\).","code":""},{"path":"https://cbruneelzupanc.github.io/semiIVreg/reference/simul_data.html","id":"simulating-standard-iv-mte-models-","dir":"Reference","previous_headings":"","what":"Simulating standard IV MTE models.","title":"Simulate data from the Generalized Roy Model with semi-IVs — simul_data","text":"function can used model problem IVs used estimate Marginal Treatment Effects, setting effect semi-IVs respective outcomes zero. coefficients can adjusted mimic Roy models Heckman, Urzua Vytlacil (2006), Heckman Vytlacil (2007). Small adjustments inside function allow mimic simulation Andresen (2018) (mtefe Stata), 2 regions (state).","code":""},{"path":"https://cbruneelzupanc.github.io/semiIVreg/reference/simul_data.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Simulate data from the Generalized Roy Model with semi-IVs — simul_data","text":"Bruneel-Zupanc, C. (2023). (fully) exclude , necessary! Identification semi-IVs. arXiv preprint arXiv:2303.12667. Andresen, M. E. (2018). Exploring marginal treatment effects: Flexible estimation using Stata. Stata Journal, 18(1), 118-158. Heckman, J. J., Urzua, S., & Vytlacil, E. (2006). Understanding instrumental variables models essential heterogeneity. Review Economics Statistics, 88(3), 389-432. Heckman, J. J., & Vytlacil, E. J. (2007). Econometric evaluation social programs, part II: Using marginal treatment effect organize alternative econometric estimators evaluate social programs, forecast effects new environments. Handbook econometrics, 6, 4875-5143.","code":""},{"path":"https://cbruneelzupanc.github.io/semiIVreg/reference/simul_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulate data from the Generalized Roy Model with semi-IVs — simul_data","text":"","code":"N = 10000; set.seed(12345)  # Example 1: Heterogenous Treatment Effects. model_type = \"heterogenous\" param_error = c(1, 1, 0.6, 0.5) # var_u0, var_u1, cov_u0u1, var_cost param_Z = c(0, 0, 0, 0, 1.5, 1.5, 0.9) # meanW0 Xbinary0, meanW1 Xbinary0, meanW0 Xbinary1, meanW1 Xbinary1, varW0, varW1, covW0W1 param_p = c(0, -0.7, 0.7, 0, 0, 0) # constant, W0, W1, W0xW1, Xbinary, Xcontinuous param_y0 = c(3.2, 0.8, 0, 0) # intercept, W0, Xbinary, Xcontinuous; param_y1 = c(3.2+0.4, 0.5, 0, 0) # the +0.4 = ATE; W1, Xbinary, Xcontinuous; param_genX = c(0.4, 0, 2)  data = simul_data(N, model_type, param_y0, param_y1, param_p, param_Z, param_genX, param_error)   # Example 2: Homogenous Treatment Effects (constant MTE) model_type = \"homogenous\" param_error = c(1, 1.5, -0.6) # var_u, var_v, cov_uv param_Z = c(0, 0, 0, 0, 1.5, 1.5, 0.9) param_p = c(0, -0.5, 0.5, 0, 0, 0) # the constant <=> mean_V param_y0 = c(3.2, 0.8, 0, 0) param_y1 = c(3.2+0.4, 0.5, 0, 0) param_genX = c(0.4, 0, 2)  data1 = simul_data(N, model_type, param_y0, param_y1, param_p, param_Z, param_genX, param_error)   # Set the effects of w1 or w0 on its outcome to zero if want a valid IV, e.g., # param_y1 = c(3.2+0.4, 0, 0, 0) # w1 is a valid IV # or: param_y0 = c(3.2, 0, 0, 0) # w0 is a valid IV"},{"path":"https://cbruneelzupanc.github.io/semiIVreg/reference/supp_plot_fun.html","id":null,"dir":"Reference","previous_headings":"","what":"Propensity score support plot — supp_plot_fun","title":"Propensity score support plot — supp_plot_fun","text":"Returns support plot treatment status propensity score Phat included dataset.","code":""},{"path":"https://cbruneelzupanc.github.io/semiIVreg/reference/supp_plot_fun.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Propensity score support plot — supp_plot_fun","text":"","code":"supp_plot_fun(data, common_supp)"},{"path":"https://cbruneelzupanc.github.io/semiIVreg/reference/supp_plot_fun.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Propensity score support plot — supp_plot_fun","text":"data Dataframe containing treatment status, factor variable Treatment propensity score name Phat. common_supp Vector two values indicating common support plot. Default full support 0,1. colMTE, colD0, colD1 Color MTE, MTR0 MTR1 curves.","code":""},{"path":"https://cbruneelzupanc.github.io/semiIVreg/reference/supp_plot_fun.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Propensity score support plot — supp_plot_fun","text":"","code":"# Plot the true common support (with true - unobserved - propensity score) # Using simulated data. data(roydata); data=roydata;  # Syntax adjustment to use the function data$Treatment = factor(data$d) data$Phat = data$P # P is unobserved, we only know it because simulation here  #common_supp can be determined by looking at the plot - it's not necessary, just a graphical option supp_P0 = c(min(data$Phat[which(data$d == 0)]), max(data$Phat[which(data$d== 0)])) supp_P1 = c(min(data$Phat[which(data$d == 1)]), max(data$Phat[which(data$d == 1)])) common_supp = c(max(supp_P0[1], supp_P1[1]), min(supp_P0[2], supp_P1[2]))  supp_plot = supp_plot_fun(data, common_supp); supp_plot"}]
