dat$logy = log(dat$y)
dat = dat[which(!is.na(dat$logy) & dat$y > 0),]
dat = dat[which(dat$y > 5 & dat$y < 150),]
dat = dat[which(dat$hy > 5 & dat$hy < 100),]
dat = dat[which(dat$worker_type %in% c("Wage/salary, private", "Wage/salary, non-profit")),]
dat = dat[which(dat$inschool == 0),] # only non-student
# Further selections:
#dat = dat[which(dat$educ == 6), ] # Exactly High School Education
dat = dat[which(dat$educ == 6), ]
dat = dat[which(dat$sex == "Male"),]
dat = dat[which(dat$race == "White"),]
dat = dat[which(dat$age >= 21 & dat$age <= 30),]
library(semiIVreg)
load(file=paste0(code_wd, "data/data_manuf.RData"))
# ---------------------
# 0. Last modifications
# ---------------------
# Focus on overall wage, or just on wage conditional on employment?
# -> go for conditional on employment only.
#dat = dat[which(dat$y > 5 & dat$work == 1),]
dat = dat[which(dat$work == 1),]
#dat$logy = log(dat$y)
dat$y = dat$hy;
dat$logy = log(dat$y)
dat = dat[which(!is.na(dat$logy) & dat$y > 0),]
dat = dat[which(dat$y > 5 & dat$y < 150),]
dat = dat[which(dat$hy > 5 & dat$hy < 100),]
dat = dat[which(dat$worker_type %in% c("Wage/salary, private", "Wage/salary, non-profit")),]
dat = dat[which(dat$inschool == 0),] # only non-student
# Further selections:
#dat = dat[which(dat$educ == 6), ] # Exactly High School Education
dat = dat[which(dat$educ == 6), ]
dat = dat[which(dat$sex == "Male"),]
dat = dat[which(dat$race == "White"),]
dat = dat[which(dat$age >= 18 & dat$age <= 30),]
# (ii) semiIVreg
propensity_formula = manuf ~
log(manuf_rgdp) + log(nonmanuf_rgdp) +
age + I(age^2) +
#factor(educ) +  #factor(race) + factor(sex) +
factor(year) + factor(statefip)
formula = logy ~ manuf |
log(nonmanuf_rgdp) +
age + I(age^2) + #factor(educ) + #factor(race) + factor(sex) +
factor(year) + factor(statefip) |
log(manuf_rgdp) +
age + I(age^2) + #factor(educ) + #factor(race) + factor(sex) +
factor(year) + factor(statefip)
set.seed(123)
ref_indiv = data.frame(race="White", age=30, educ=6, sex="Male", year=2010, statefip=42,
manuf_gdp = 80000, nonmanuf_gdp = 630000,
#manuf_rgdp = 60000, nonmanuf_rgdp = 430000,
manuf_rgdp = 56000, nonmanuf_rgdp = 395000, # the values for pennsylvania,
manuf_rgdp_3yr = 56000, nonmanuf_rgdp_3yr = 395000, # the values for pennsylvania,
manuf_rgdp_growth = 0.006, nonmanuf_rgdp_growth = 0.022,
state_population = 13000000,
permanent_manuf_rgdp = 60000, permanent_nonmanuf_rgdp = 430000,
permanent_manuf_rwages = 43000, permanent_nonmanuf_rwages = 32000,
manuf_rwages = 43000, nonmanuf_rwages = 32000,
manuf_rgdp_pc=6.4, nonmanuf_rgdp_pc = 51,
manuf_rprod=110, nonmanuf_rprod = 82,
nonmanuf_nb_empl = 5400000, manuf_nb_empl = 500000,
manuf_nb_estab = 16000, nonmanuf_nb_estab = 310000,
permanent_nonmanuf_nb_empl = 5400000, permanent_manuf_nb_empl = 500000)
# - Second Stage:
set.seed(123)
#dat1 = dat[sample(1:nrow(dat), size=5000000), ]
dat1 = dat
gc()
#rm(dat); gc()
# - First stage:
#fstage = glm(propensity_formula, data=dat1, family=binomial(link="probit")) #
#summary(fstage) # the effect on the proba is really small!!!
#rm(fstage); gc()
#dat1 = dat1[which(dat1$year >= 2005),]
semiiv = semiivreg(formula,
propensity_formula = propensity_formula,
est_method = "sieve", ref_indiv = ref_indiv,
pol_degree_sieve = 3, #common_supp_trim = c(0.0, 0.35),
trimming_value = c(0.05, 0.95),
data=dat1)
semiiv_heter_sieve = semiiv
mte_plot = semiiv$plot$mte; mtr_plot = semiiv$plot$mtr
mte_plot = mte_plot + xlim(0, 0.4) #+ ylim(-2, 5)
mtr_plot = mtr_plot + xlim(0, 0.4) #+ ylim(-2, 5)
grid.arrange(mte_plot, mtr_plot, ncol=2)
summary(dat$y)
exp(2.5)
exp(1)
library(semiIVreg)
load(file=paste0(code_wd, "data/data_manuf.RData"))
# ---------------------
# 0. Last modifications
# ---------------------
# Focus on overall wage, or just on wage conditional on employment?
# -> go for conditional on employment only.
#dat = dat[which(dat$y > 5 & dat$work == 1),]
dat = dat[which(dat$work == 1),]
#dat$logy = log(dat$y)
dat$y = dat$hy;
dat$logy = log(dat$y)
dat = dat[which(!is.na(dat$logy) & dat$y > 0),]
dat = dat[which(dat$y > 5 & dat$y < 150),]
dat = dat[which(dat$hy > 5 & dat$hy < 100),]
dat = dat[which(dat$worker_type %in% c("Wage/salary, private", "Wage/salary, non-profit")),]
dat = dat[which(dat$inschool == 0),] # only non-student
# Further selections:
#dat = dat[which(dat$educ == 6), ] # Exactly High School Education
dat = dat[which(dat$educ == 6), ]
dat = dat[which(dat$sex == "Male"),]
dat = dat[which(dat$race == "White"),]
dat = dat[which(dat$age >= 18 & dat$age <= 30),]
# -----------------
# I. Overall period
# -----------------
## # (i) Naive OLS
## ols = lm(log(y) ~ manuf  + age + I(age^2) + factor(educ) + factor(race) + factor(sex) +
##            factor(year) + factor(statefip), data=dat)
## summary(ols)
## rm(ols); gc()
# (ii) semiIVreg
propensity_formula = manuf ~
log(manuf_rgdp) + log(nonmanuf_rgdp) +
age + I(age^2) +
#factor(educ) +  #factor(race) + factor(sex) +
factor(year) + factor(statefip)
formula = logy ~ manuf |
log(nonmanuf_rgdp) +
age + I(age^2) + #factor(educ) + #factor(race) + factor(sex) +
factor(year) + factor(statefip) |
log(manuf_rgdp) +
age + I(age^2) + #factor(educ) + #factor(race) + factor(sex) +
factor(year) + factor(statefip)
set.seed(123)
ref_indiv = data.frame(race="White", age=30, educ=6, sex="Male", year=2010, statefip=42,
manuf_gdp = 80000, nonmanuf_gdp = 630000,
#manuf_rgdp = 60000, nonmanuf_rgdp = 430000,
manuf_rgdp = 56000, nonmanuf_rgdp = 395000, # the values for pennsylvania,
manuf_rgdp_3yr = 56000, nonmanuf_rgdp_3yr = 395000, # the values for pennsylvania,
manuf_rgdp_growth = 0.006, nonmanuf_rgdp_growth = 0.022,
state_population = 13000000,
permanent_manuf_rgdp = 60000, permanent_nonmanuf_rgdp = 430000,
permanent_manuf_rwages = 43000, permanent_nonmanuf_rwages = 32000,
manuf_rwages = 43000, nonmanuf_rwages = 32000,
manuf_rgdp_pc=6.4, nonmanuf_rgdp_pc = 51,
manuf_rprod=110, nonmanuf_rprod = 82,
nonmanuf_nb_empl = 5400000, manuf_nb_empl = 500000,
manuf_nb_estab = 16000, nonmanuf_nb_estab = 310000,
permanent_nonmanuf_nb_empl = 5400000, permanent_manuf_nb_empl = 500000)
# - Second Stage:
set.seed(123)
#dat1 = dat[sample(1:nrow(dat), size=5000000), ]
dat1 = dat
gc()
#rm(dat); gc()
# - First stage:
#fstage = glm(propensity_formula, data=dat1, family=binomial(link="probit")) #
#summary(fstage) # the effect on the proba is really small!!!
#rm(fstage); gc()
#dat1 = dat1[which(dat1$year >= 2005),]
semiiv = semiivreg(formula,
propensity_formula = propensity_formula,
est_method = "sieve", ref_indiv = ref_indiv,
pol_degree_sieve = 3, #common_supp_trim = c(0.0, 0.35),
trimming_value = c(0.05, 0.95),
data=dat1)
semiiv_heter_sieve = semiiv
mte_plot = semiiv$plot$mte; mtr_plot = semiiv$plot$mtr
mte_plot = mte_plot + xlim(0, 0.4) #+ ylim(-2, 5)
mtr_plot = mtr_plot + xlim(0, 0.4) #+ ylim(-2, 5)
grid.arrange(mte_plot, mtr_plot, ncol=2)
hist(semiiv$data$Xdat$Phat) # the trimmed version
hist(semiiv$data$data$Phat) # the trimmed version
semiiv = semiivreg(formula,
propensity_formula = propensity_formula,
est_method = "sieve", ref_indiv = ref_indiv,
pol_degree_sieve = 3, #common_supp_trim = c(0.0, 0.35),
trimming_value = c(0.02, 0.98),
data=dat1)
semiiv_heter_sieve = semiiv
mte_plot = semiiv$plot$mte; mtr_plot = semiiv$plot$mtr
mte_plot = mte_plot + xlim(0, 0.4) #+ ylim(-2, 5)
mtr_plot = mtr_plot + xlim(0, 0.4) #+ ylim(-2, 5)
grid.arrange(mte_plot, mtr_plot, ncol=2)
exp(1.5)
log(5)
names(dat$indnaics)
head(dat$indnaics)
head(dat$industry)
table(dat$industry)
which(dat$industry == "Public Administration")
load(file=paste0(data_wd, "BEA/BEA_industry_state.RData"))
head(data$industryclassification)
table(data$industryclassification)
library(dplyr)
# -------------------
# Returns to Industry - Main Options
# -------------------
rm(list=ls()); gc()
library(haven)
library(data.table)
library(nloptr)
library(cdlTools) # just for state name to fips
library(ggplot2)
library(tidyr)
library(splines)
library(nloptr)
library(dplyr)
library(zoo)
library(gamlss)
library(readxl)
library(semiIVreg)
data_wd = "~/Dropbox/Data/Original_data/"
code_wd = "~/Dropbox/Recherche/semi-IV/code/application/"
fig_wd = "~/Dropbox/Recherche/semi-IV/figures/"
CEX = 1; LWD = 1; width = 4.5; height = 4.5 # for slides
width = 5.25; height = 5.25 # for report
width = 5; height = 5 # for slides
options(scipen=10)
seed=123
set.seed(seed)
all_naics = c("11", "21", "22", "23", "31-33", "42",
"44-45", "48-49", "51", "52", "53", "54", "55", "56",
"61", "62", "71", "72", "81", "92", "99") # 99 = "unclassified" in QCEW... Maybe remove
industry_code_manuf = c("31-33", "23", "21") # Manufacturing, Construction and Mining
code_ACS_manuf = c("Manufacturing", "Construction", "Mining, quarrying, and oil and gas extraction")
excluded_industry_code = c("92") # remove public administration, because I remove them anyway after..
code_ACS_excluded = c("Public Administration", "Active Duty Military") # Active Duty Military also in 92 anyway
# --------
# 0. CPI-U
# --------
# Serie: CUUS0000SA0, base: 1982-1984=100
CPI_data = read_excel(paste0(data_wd, "BLS/CPI_BLS.xlsx"))
CPI_data = CPI_data[12:65,]
colnames(CPI_data) = c("year", "cpi_bls99")
CPI_data$year = as.numeric(CPI_data$year)
CPI_data$cpi_bls99 = as.numeric(CPI_data$cpi_bls99)
# Base 1999 (to correspond to ACS)
CPI_data$cpi_bls99 = 1/(CPI_data$cpi_bls99/CPI_data$cpi_bls99[which(CPI_data$year == 1999)])
load(file=paste0(data_wd, "BEA/BEA_industry_state.RData"))
selected_naics = all_bea_naics[which(!all_naics %in% excluded_industry_code)]
selected_naics = all_naics[which(!all_naics %in% excluded_industry_code)]
selected_naics
all_naics = c("11", "21", "22", "23", "31-33", "42",
"44-45", "48-49", "51", "52", "53", "54", "55", "56",
"61", "62", "71", "72", "81", "92", "99") # 99 = "unclassified" in QCEW... Maybe remove
industry_code_manuf = c("31-33", "23", "21") # Manufacturing, Construction and Mining
code_ACS_manuf = c("Manufacturing", "Construction", "Mining, quarrying, and oil and gas extraction")
excluded_industry_code = c("92", "99") # remove public administration, because I remove them anyway after..
# 99 = unclassified, only in QCEW.
code_ACS_excluded = c("Public Administration", "Active Duty Military") # Active Duty Military also in 92 anyway
# Change if want to include more sectors;
# -------------------
# Returns to Industry - Main Options
# -------------------
rm(list=ls()); gc()
library(haven)
library(data.table)
library(nloptr)
library(cdlTools) # just for state name to fips
library(ggplot2)
library(tidyr)
library(splines)
library(nloptr)
library(dplyr)
library(zoo)
library(gamlss)
library(readxl)
library(semiIVreg)
data_wd = "~/Dropbox/Data/Original_data/"
code_wd = "~/Dropbox/Recherche/semi-IV/code/application/"
fig_wd = "~/Dropbox/Recherche/semi-IV/figures/"
CEX = 1; LWD = 1; width = 4.5; height = 4.5 # for slides
width = 5.25; height = 5.25 # for report
width = 5; height = 5 # for slides
options(scipen=10)
seed=123
set.seed(seed)
all_naics = c("11", "21", "22", "23", "31-33", "42",
"44-45", "48-49", "51", "52", "53", "54", "55", "56",
"61", "62", "71", "72", "81", "92", "99") # 99 = "unclassified" in QCEW... Maybe remove
industry_code_manuf = c("31-33", "23", "21") # Manufacturing, Construction and Mining
code_ACS_manuf = c("Manufacturing", "Construction", "Mining, quarrying, and oil and gas extraction")
excluded_industry_code = c("92", "99") # remove public administration, because I remove them anyway after..
# 99 = unclassified, only in QCEW.
code_ACS_excluded = c("Public Administration", "Active Duty Military") # Active Duty Military also in 92 anyway
# Change if want to include more sectors;
# -------
# Part 1. semi-IVs per STATE for manufacturing vs non-manufacturing
# -------
# Focus on Manufacturing vs non-manufacturing only.
# (remark: may also want to focus only on private sector?)
# --------
# 0. CPI-U
# --------
# Serie: CUUS0000SA0, base: 1982-1984=100
CPI_data = read_excel(paste0(data_wd, "BLS/CPI_BLS.xlsx"))
CPI_data = CPI_data[12:65,]
colnames(CPI_data) = c("year", "cpi_bls99")
CPI_data$year = as.numeric(CPI_data$year)
CPI_data$cpi_bls99 = as.numeric(CPI_data$cpi_bls99)
# Base 1999 (to correspond to ACS)
CPI_data$cpi_bls99 = 1/(CPI_data$cpi_bls99/CPI_data$cpi_bls99[which(CPI_data$year == 1999)])
# to correspond exactly to the ACS, corresponds to the MULTIPLYING factor; -> I checked: it corresponds exactly, OK.
# -----------
# 1. BEA Data
# -----------
# For GDP per sector. Population of the state, etc.
load(file=paste0(data_wd, "BEA/BEA_industry_state.RData"))
selected_naics = all_naics[which(!all_naics %in% excluded_industry_code)]
dat = data[which(data$industryclassification %in% selected_naics),]
# Add CPI-U (base 1999)
dat = merge(dat, CPI_data, by="year")
#
# Could discuss whether we keep Public 92 or not.
# real variables:
head(dat)
# real variables:
dat$beargdp = dat$rgdp # the "rgdp" in the BEA data is NOT really real gdp. It includes some qtty chain type by industry;
dat$rgdp = dat$gdp*dat$cpi_bls99 # => compute rgdp ourselves;
# Manufacturing vs non-manufacturing:
dat$manuf = ifelse(dat$industryclassification %in% industry_code_manuf, 1, 0)
adata <- aggregate(cbind(gdp, rgdp, beargdp, subsidies,
employees_compensation, prod_tax,
prod_tax_minus_subsidies, gross_operating_surplus)
~ geofips + geoname + year + manuf,
data = dat, FUN = sum, na.rm = TRUE)
adata1 = adata[which(adata$manuf == 1),]
adata0 = adata[which(adata$manuf == 0),]
names(adata1)[5:ncol(adata1)] = paste0("manuf_", names(adata1)[5:ncol(adata1)])
names(adata0)[5:ncol(adata0)] = paste0("nonmanuf_", names(adata0)[5:ncol(adata0)])
adata1=adata1[, which(colnames(adata1) != "manuf")]
adata0=adata0[, which(colnames(adata0) != "manuf")]
datt = merge(adata0, adata1, by=c("geofips", "geoname", "year"))
# Remerge with the state-level population information:
datt1 = subset(dat, select=c("geofips", "geoname", "year", "state_population", "state_percapita_personal_income"))
datt1 = datt1[which(!duplicated(datt1)),]
dattt = merge(datt, datt1, by=c("geofips", "geoname", "year"), all.x=TRUE)
# Save:
bea_data = dattt;
head(bea_data)
bea_data
bea_data$manuf_gdp/bea_data$nonmanuf_gdp
a = bea_data$manuf_gdp/bea_data$nonmanuf_gdp
summary(a)
save(bea_data, file=paste0(data_wd, "BEA/BEA_manuf.RData")) # Add shocks and eventually population later;
# ------
# 2. BLS - QCEW semi-IVs
# ------
# For number of establishment, employment and average wage per industry/state.
load(file=paste0(data_wd, "BLS/QCEW_industry_state.RData"))
head(dat[which(dat$industry_code == "99")])
head(dat[which(dat$industry_code == "99"),])
table(dat$industryclassification)
load(file=paste0(data_wd, "BLS/QCEW_industry_state.RData"))
table(data$industry_code)
a = data[which(data$industry_code == "99"),]
head(a)
dat = data[which(data$industry_code %in% selected_naics),]
head(dat)
table(dat$industry_code)
# ------
# 2. BLS - QCEW semi-IVs
# ------
# For number of establishment, employment and average wage per industry/state.
load(file=paste0(data_wd, "BLS/QCEW_industry_state.RData"))
dat = data[which(data$industry_code %in% selected_naics),]
# Could discuss whether we keep Public 92 or not. Could also remove the "unclassified" (99).
# Manufacturing vs non-manufacturing:
dat$manuf = ifelse(dat$industry_code %in% industry_code_manuf, 1, 0)
adata <- aggregate(cbind(nb_estab, nb_empl, total_wages, taxable_wages, contributions,
private_nb_estab, private_nb_empl, private_total_wages, private_taxable_wages, private_contributions,
public_nb_estab, public_nb_empl, public_total_wages, public_taxable_wages, public_contributions)
~ area_fips + year + manuf,
data = dat, FUN = sum, na.rm = TRUE)
# Reconstruct the average wages:
adata$wages = adata$total_wages/adata$nb_empl
adata$private_wages = adata$private_total_wages/adata$private_nb_empl
adata$public_wages = adata$public_total_wages/adata$public_nb_empl
adata$wages[which(adata$nb_empl == 0)] = NA
adata$private_wages[which(adata$private_nb_empl == 0)] = NA
adata$public_wages[which(adata$public_nb_empl == 0)] = NA
# Real wages:
# Add CPI-U (base 1999)
adata = merge(adata, CPI_data, by="year")
adata$rwages = adata$wages*adata$cpi_bls99 # => compute real wages ourselves;
adata$private_rwages = adata$private_wages*adata$cpi_bls99 # => compute real wages ourselves;
adata$public_rwages = adata$public_wages*adata$cpi_bls99 # => compute real wages ourselves;
# reorder columns:
adata = subset(adata, select=c("area_fips", "year", "manuf",
"nb_estab", "nb_empl", "wages", "rwages", "total_wages", "taxable_wages", "contributions",
"private_nb_estab", "private_nb_empl", "private_wages", "private_rwages", "private_total_wages", "private_taxable_wages", "private_contributions",
"public_nb_estab", "public_nb_empl", "public_wages", "public_rwages", "public_total_wages", "public_taxable_wages", "public_contributions"))
adata1 = adata[which(adata$manuf == 1),]
adata0 = adata[which(adata$manuf == 0),]
names(adata1)[4:ncol(adata1)] = paste0("manuf_", names(adata1)[4:ncol(adata1)])
names(adata0)[4:ncol(adata0)] = paste0("nonmanuf_", names(adata0)[4:ncol(adata0)])
adata1=adata1[, which(colnames(adata1) != "manuf")]
adata0=adata0[, which(colnames(adata0) != "manuf")]
datt = merge(adata0, adata1, by=c("area_fips", "year"))
datt = merge(datt, CPI_data, by="year") # re-add the cpi here
qcew_data = datt;
save(qcew_data, file=paste0(data_wd, "BLS/QCEW_manuf.RData")) # Add shocks and eventually population later;
#summary(datt$manuf_public_wages/datt$manuf_private_wages)
# ----------
# 3. Merging
# ----------
load(file=paste0(data_wd, "BEA/BEA_manuf.RData"))
load(file=paste0(data_wd, "BLS/QCEW_manuf.RData"))
bea_data$geofips = gsub(" ", "", bea_data$geofips)
table(bea_data$geofips)
table(qcew_data$area_fips)
colnames(qcew_data)[which(colnames(qcew_data) == "area_fips")] = "geofips"
semiiv_data = merge(bea_data, qcew_data, by=c("geofips", "year"), all.x=TRUE, all.y = TRUE)
# remark: QCEW don't include US data - but can easily include it, it's there! But we don't use it as semi-IVs anyway.
# -------------------
# 4. Shocks formation
# -------------------
# (i) Rolling average over 3 previous years of the variables + Growth rates
sdata = semiiv_data
# Example list of variables
var_list <- c("manuf_gdp", "manuf_rgdp", "manuf_nb_empl", "manuf_nb_estab", "manuf_wages", "manuf_rwages",
"nonmanuf_gdp", "nonmanuf_rgdp", "nonmanuf_nb_empl", "nonmanuf_nb_estab", "nonmanuf_wages", "nonmanuf_rwages")
# Assuming 'data' is your panel dataset
# Calculate 3-year rolling average for each variable in var_list
sdata <- sdata %>%
arrange(geofips, year) %>%
group_by(geofips) %>%
mutate(
across(all_of(var_list),
~ rollapply(.x, width = 3, FUN = mean, fill = NA, align = "right"),
.names = "{.col}_3yr"), # 3-year rolling average
across(all_of(var_list),
~ (.x - lag(.x)) / lag(.x),
.names = "{.col}_growth"),  # Calculate growth rate
across(all_of(var_list),
~ (.x - lag(.x, 3)) / lag(.x, 3),
.names = "{.col}_3yr_growth")  # Calculate 3-year growth rate
) %>%
ungroup()
semiiv_data = sdata;
# (ii) "Permanent" values (area fixed effect -> only computed over the ACS period!)
sdata = semiiv_data[which(semiiv_data$year %in% 1999:2019), ] # only over the period for which we have the ACS data
b = as.numeric(sdata$geofips)
sdata = sdata[which(b > 0 & b <= 56000), ] # only keep the states
var_list = c("manuf_gdp", "manuf_rgdp", "manuf_nb_empl", "manuf_nb_estab", "manuf_wages", "manuf_rwages",
"nonmanuf_gdp", "nonmanuf_rgdp", "nonmanuf_nb_empl", "nonmanuf_nb_estab", "nonmanuf_wages", "nonmanuf_rwages")
for(i in 1:length(var_list)) {
formula = as.formula(paste0(var_list[i], "~ factor(geofips)"))
model = lm(formula, data=sdata)
res = predict(model, newdata=sdata)
var_name = paste0("permanent_", var_list[i])
sdata[[var_name]] = res
}
sdata = subset(sdata, select=c("geofips", "year", paste0("permanent_", var_list)))
semiiv_data = merge(semiiv_data, sdata, by=c("geofips", "year"), all.x=TRUE)
# Save:
save(semiiv_data, file=paste0(code_wd, "data/semiIV_manuf.RData"))
load(file=paste0(data_wd, "ACS/ACS_clean.RData"))
# 1. Clean ACS data to focus on subsample (easier to merge afterwards)
data$manuf = ifelse(data$industry %in% code_ACS_manuf, 1, 0)
data$manuf[which(data$manuf %in% code_ACS_excluded)] = NA
code_ACS_excluded
table(data$industry)
data = data[which(!is.na(data$manuf)), ]
table(data$industry)
data$manuf[which(data$industry %in% code_ACS_excluded)] = NA
data = data[which(!is.na(data$manuf)), ]
table(data$industry)
data = data[which(data$age >= 18 & data$age <= 64),] # focus on young
# Race: (to avoid categories with too few observations)
data$race = ifelse(data$race == 1, "White",
ifelse(data$race == 2, "Black",
ifelse(data$race == 3, "American Indian",
ifelse(data$race %in% c(4, 5, 6), "Asian",
ifelse(data$race %in% c(7, 8, 9), "Other", NA)))))
data$race = factor(data$race, levels = c("White", "Black", "American Indian", "Asian", "Other"))
load(file=paste0(code_wd, "data/semiIV_manuf.RData"))
semiiv_data$statefip = as.numeric(semiiv_data$geofips)/1000
semiiv_data1 = semiiv_data;
# LAG the semi-IVs of one year: it's the GDP of the previous period which is going to impact the current choices;
semiiv_data1$year = semiiv_data1$year + 1 # this way, 1999 in the bea will be merged with 2000 in the ACS.
# YEAR MATCHING:
# In the ACS, surveys all year. So in 2005, can have people interviewed from january 2005 to december 2005.
# -> YEAR reports the four-digit year when the household was enumerated or included in the census, the ACS, and the PRCS.
# Want to match it properly with semi-IV from 2004.
data$year = data$year - 1 #
names(semiiv_data)
# Subset of semi-IV of interest (don't need them all)
semiiv_data1 = subset(semiiv_data, select=c("statefip", "year",
"manuf_rgdp", "manuf_rgdp_3yr", "manuf_rgdp_growth", "manuf_rgdp_3yr_growth",
"manuf_gross_operating_surplus", "nonmanuf_gross_operating_surplus",
"manuf_nb_empl", "manuf_nb_empl_3yr", "manuf_nb_empl_growth", "manuf_nb_empl_3yr_growth",
"manuf_nb_estab", "manuf_nb_estab_3yr", "manuf_nb_estab_growth", "manuf_nb_estab_3yr_growth",
"manuf_rwages", "manuf_rwages_3yr", "manuf_rwages_growth", "manuf_rwages_3yr_growth",
"nonmanuf_rgdp", "nonmanuf_rgdp_3yr", "nonmanuf_rgdp_growth", "nonmanuf_rgdp_3yr_growth",
"nonmanuf_nb_empl", "nonmanuf_nb_empl_3yr", "nonmanuf_nb_empl_growth", "nonmanuf_nb_empl_3yr_growth",
"nonmanuf_nb_estab", "nonmanuf_nb_estab_3yr", "nonmanuf_nb_estab_growth", "nonmanuf_nb_estab_3yr_growth",
"nonmanuf_rwages", "nonmanuf_rwages_3yr", "nonmanuf_rwages_growth", "nonmanuf_rwages_3yr_growth",
"state_population"))
##                                            "nonmanuf_gdp", "nonmanuf_rgdp", "nonmanuf_subsidies",
##                                            "nonmanuf_wages", "nonmanuf_rwages", "nonmanuf_nb_empl", "nonmanuf_nb_estab",
##                                            "manuf_gdp", "manuf_rgdp", "manuf_subsidies",
##                                            "manuf_wages", "manuf_rwages", "manuf_nb_empl", "manuf_nb_estab",
##                                            "state_population", "state_percapita_personal_income",
##                                            "permanent_manuf_gdp", "permanent_manuf_rgdp", "permanent_manuf_nb_empl",
##                                            "permanent_manuf_nb_estab", "permanent_manuf_wages", "permanent_manuf_rwages",
##                                            "permanent_nonmanuf_gdp", "permanent_nonmanuf_rgdp", "permanent_nonmanuf_nb_empl",
##                                            "permanent_nonmanuf_nb_estab", "permanent_nonmanuf_wages", "permanent_nonmanuf_rwages"))
# Merge
gc()
dat = merge(data, semiiv_data1, by=c("year", "statefip"))
