# Model 1
library(semiIVreg)
N = 10000; set.seed(1234)
model_type = "homogenous"
param_error = c(1, 1.5, -0.6) # var_u, var_v, cov_uv # if homogenous
param_Z = c(0, 0, 0, 0, 1.5, 1.5, 0.9) # meanW0 state0, meanW1 state0, meanW0 state1, meanW1 state1, varW0, varW1, covW0W1
param_p = c(0, -0.5, 0.5, 0, 0, 0) # constant, alphaW0, alphaW1, alphaW0W1, effect of state, effect of parent educ
param_y0 = c(3.2, 0.8, 0, 0) # intercept, effect of Wd, effect of state, effect of parent educ;
param_y1 = c(3.2+0.4, 0.5, 0, 0) # the +0.2 = Average treatment effect; effect of W1, effect of state, effect of parent educ;
param_genX = c(0.4, 0, 2) # probability state=1 (instead of 0), mean_parenteduc, sd_parenteduc (parenteduc drawn as continuous)
data = simul_data(N, model_type, param_y0, param_y1, param_p, param_Z, param_genX, param_error)
data$true_TE = data$y1 - data$y0
summary(lm(true_TE ~ w0 + w1, data))
true_param = c(param_y0[1], param_y1[1] - param_y0[1], param_y0[2], param_y1[2]); true_param
# constant y0, constant y1 - constant y0, effects of w0 on y0, effects of w1 on y1.
naive_ols = lm(y ~ d + w0 + w1, data); summary(naive_ols)
mean(data$U1[which(data$d == 1)]); mean(data$U0[which(data$d==0)])
library(ivreg)
valid_iv = ivreg(y ~ d | w0 + w1 + w0:w1, data=data); summary(valid_iv)
semiiv = semiivreg(y~d|w0|w1, data, plotting=FALSE)
semiiv_homogenous = semiiv$estimate$est_homogenous # extract the coefficients from the homogenous TE specification
summary_coeff = summary(semiiv_homogenous)
summary_coeff$coefficients[1:4,] # only print the first 4 coefficients, the other correspond to the control function of P
true_param
semiivboot = semiivreg_boot(y~d|w0|w1, data, Nboot=50, plotting=FALSE) # 500 bootstraps replication, may take a minute.
